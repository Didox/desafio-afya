{"version":3,"sources":["assets/GlobalStyles/index.ts","services/auth.ts","components/Navbar/styles.ts","components/Navbar/index.tsx","components/HomeBanner/styles.ts","components/HomeBanner/index.tsx","components/AboutApp/styles.ts","components/AboutApp/index.tsx","components/AboutUs/styles.ts","components/AboutUs/index.tsx","components/Contact/styles.ts","components/Contact/index.tsx","components/Footer/styles.ts","components/Footer/index.tsx","views/pages/Home/index.tsx","components/BackToHome/styles.ts","components/BackToHome/index.tsx","services/api.ts","views/pages/Login/styles.ts","views/pages/Login/index.tsx","views/pages/Register/styles.ts","views/pages/Register/index.tsx","private.routes.tsx","views/pages/Dashboard/styles.ts","services/logout.ts","components/Sidebar/index.tsx","components/DashboardChart/styles.ts","components/DashboardChart/index.tsx","components/PieChart/styles.ts","components/PieChart/index.tsx","views/pages/Dashboard/index.tsx","assets/ModalStyles/index.ts","components/AddressForm/index.tsx","components/ClientsModal/index.tsx","components/Table/Clients/styles.ts","components/Table/Clients/index.tsx","services/search.ts","components/Search/styles.ts","components/Search/index.tsx","views/pages/Clients/styles.ts","views/pages/Clients/index.tsx","views/pages/Specialists/styles.ts","components/SpecialistsModal/index.tsx","components/ProfessionsModal/styles.ts","components/ProfessionsModal/index.tsx","components/Table/Specialists/styles.ts","components/Table/Specialists/index.tsx","views/pages/Specialists/index.tsx","components/ClientChart/styles.ts","components/ChartModal/styles.ts","components/ChartModal/index.tsx","components/ClientChart/index.tsx","views/pages/Charts/styles.ts","views/pages/Charts/index.tsx","components/Calendar/styles.ts","components/ScheduleModal/styles.ts","components/ScheduleModal/index.tsx","components/Calendar/index.tsx","components/AppointmentResults/styles.ts","components/AppointmentResults/index.tsx","components/SearchAppointment/styles.ts","components/SearchAppointment/index.tsx","views/pages/Appointments/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","isAuthenticated","localStorage","getItem","Navigation","styled","nav","NavigationBar","Navbar","expand","Brand","href","src","width","height","className","alt","Toggle","aria-controls","Collapse","id","Nav","Link","Form","inline","Button","HomeBannerContainer","section","HomeBanner","Carousel","fade","Item","interval","AboutAppContainer","main","AboutApp","AboutContainer","AboutUs","target","ContactContainer","Contact","htmlFor","type","name","required","FooterContainer","footer","Footer","title","Home","BackHome","BackToHome","Provider","value","to","api","axios","create","baseURL","viaCepApi","LoginContainer","Login","useState","formDataContent","setFormDataContent","isLoading","setIsLoading","history","useHistory","loginSubmit","useCallback","e","preventDefault","login","password","post","then","response","setItem","data","token","user","push","catch","err","Swal","fire","text","icon","confirmButtonText","confirmButtonColor","finally","onSubmit","onChange","RegisterContainer","Register","registrationSubmit","errorMessage","message","maxLength","PrivateRoute","Component","component","rest","render","props","DashboardContainer","logout","clear","window","location","reload","useStyles","makeStyles","theme","createStyles","root","display","position","appBar","transition","transitions","easing","sharp","duration","leavingScreen","backgroundColor","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","color","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","drawerList","flexDirection","gap","drawerListItems","fontFamily","logoutItem","backdrop","zIndex","top","left","Sidebar","classes","open","setOpen","AppBar","Toolbar","IconButton","aria-label","onClick","edge","size","Drawer","paper","variant","anchor","Divider","List","url","map","item","index","ListItem","button","ListItemText","primary","clsx","DashboardChartContainer","DashboardChart","medicalCaresCanceled","medicalCaresCompleted","medicalCaresConfirmed","quantityClients","PieChartContainer","PieChartComponent","quantityProfessions","palette","dataSource","Object","keys","profession","val","values","argumentField","visible","horizontalAlignment","verticalAlignment","enabled","customizeTooltip","arg","valueText","percent","toFixed","Dashboard","dashboardData","setDashboardData","useEffect","get","headers","authorization","Spinner","animation","role","PieChart","ModalContainer","div","AddressForm","address","setAddress","cep","setCep","isLoadingCep","setIsLoadingCep","length","street","logradouro","neighborhood","bairro","city","localidade","state","uf","mask","pattern","disabled","replace","min","number","Number","defaultValue","ClientsModal","setState","clients","setClients","currentClient","setCurrentClient","handleModalClose","clientSubmit","form","currentTarget","checkValidity","new","put","client","noValidate","cpf","phone","cellphone","email","blood_type","TableContainer","ClientsTable","handleModalOpen","Table","striped","bordered","hover","responsive","search","endpoint","params","SearchField","Search","setResult","searchQuery","setSearchQuery","searchSubmit","a","register","result","hasOwnProperty","profession_name","placeholder","ClientsContainer","Clients","modalIsOpen","setModalIsOpen","SpecialistsContainer","SpecialistsModal","specialists","setSpecialists","currentSpecialist","setCurrentSpecialist","professions","setProfessions","specialistSubmit","label","options","formatCreateLabel","styles","option","isSelected","ProfessionsModalContainer","ProfessionsModal","setProfession","professionSubmit","reset","SpecialistsTable","specialist","Specialists","specialistModalIsOpen","setSpecialistModalIsOpen","professionModalIsOpen","setProfessionModalIsOpen","handleSpecialistModalOpen","ChartContainer","ChartModalContainer","ChartModal","currentRecordHistoric","setCurrentRecordHistoric","Container","Row","Col","FormLabel","Control","md","created_at","split","medicalRecordHistoric","dateFromLasterMedicalCare","Intl","DateTimeFormat","month","day","format","Date","Accordion","defaultActiveKey","Card","record","Header","as","eventKey","date","Body","hour","minute","hour12","description","ClientChart","isChartOpen","setIsChartOpen","ChartPageContainer","Charts","CalendarContainer","ScheduleContainer","ScheduleModal","currentAppointment","setCurrentAppointment","getAppointments","isLoadingAppointment","setIsLoadingAppointment","needDescription","setNeedDescription","appointmentSubmit","appointment","amount","status","client_id","specialist_id","console","log","isDisabled","year","setFullYear","setMonth","setDate","toISOString","setHours","setMinutes","thousandSeparator","decimalSeparator","fixedDecimalScale","decimalScale","Calendar","setIsModalOpen","isModalOpen","appointments","setAppointments","statusColors","startDate","loadMessages","ptMessages","locale","navigator","language","defaultCurrentView","defaultCurrentDate","startDayHour","endDayHour","onCellClick","cellData","onAppointmentClick","cancel","appointmentData","fieldExpr","ResultsTable","table","AppointmentResults","substr","toLowerCase","appointment_date","SearchContainer","SearchAppointment","searchParams","setSearchParams","isNaN","valueOf","Appointments","Routes","path","exact","App","GlobalStyles","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f330e6bd.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n  :root {\r\n    --main-color: #004aad;\r\n    --secondary-color: #26b0baff;\r\n    --background-color: #f3eff5ff;\r\n    --secondary-bg-color: #e9ecef;\r\n    --main-button-color: #fcbf49 ;\r\n    --main-text-color: #191919ff;\r\n    --danger-color: #ff312e;\r\n    --warning-color: #ff8600;\r\n\r\n    --main-font: 'Montserrat', sans-serif;\r\n    --secondary-font: 'KoHo', sans-serif;\r\n  }\r\n\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: var(--main-font);\r\n    scroll-behavior: smooth;\r\n  }\r\n\r\n  html {\r\n    @media (max-width: 1080px) {\r\n      font-size: 93.75%;\r\n    }\r\n\r\n    @media (max-width: 720px) {\r\n      font-size: 87.5%;\r\n    }\r\n  }\r\n\r\n  body {\r\n    background: var(--background-color);\r\n  }\r\n\r\n`;\r\n","const isAuthenticated = () =>\r\n  localStorage.getItem('@tokenVitality') !== null ? true : false;\r\n\r\nexport default isAuthenticated;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Navigation = styled.nav`\r\n  background-color: var(--main-color);\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n\r\n  .nav-links-container {\r\n    .nav-links {\r\n      margin: 1rem;\r\n\r\n      .active {\r\n        color: var(--main-button-color);\r\n      }\r\n      a {\r\n        color: var(--background-color);\r\n        font-weight: 500;\r\n        letter-spacing: 1px;\r\n\r\n        &:hover {\r\n          color: var(--main-button-color);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .navbar-toggler {\r\n    background-color: var(--background-color);\r\n  }\r\n  .nav-btns {\r\n    background-color: var(--background-color);\r\n    border: 0;\r\n    color: var(--main-color);\r\n    font-weight: 600;\r\n    margin: 1rem;\r\n    width: 12.5rem;\r\n\r\n    &:hover {\r\n      background-color: var(--main-button-color);\r\n      color: var(--main-color);\r\n    }\r\n  }\r\n`;\r\n","import { Link } from \"react-router-dom\";\r\nimport { Navigation } from \"./styles\";\r\n\r\nimport { Navbar, Nav, Button, Form } from \"react-bootstrap\";\r\n\r\nconst NavigationBar: React.FC = () => {\r\n  return (\r\n    <Navigation>\r\n      <Navbar expand=\"lg\">\r\n        <Navbar.Brand href=\"#home\">\r\n          <img\r\n            src=\"./img/vit_logo.svg\"\r\n            width=\"80\"\r\n            height=\"80\"\r\n            className=\"d-inline-block align-center\"\r\n            alt=\"Vitality logo\"\r\n          />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"nav-links-container\">\r\n          <Nav className=\"mr-auto nav-links\">\r\n            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n            <Nav.Link href=\"#app\">Aplicação</Nav.Link>\r\n            <Nav.Link href=\"#about\">Sobre nós</Nav.Link>\r\n            <Nav.Link href=\"#contact\">Contato</Nav.Link>\r\n          </Nav>\r\n          <Form inline>\r\n            <Nav.Link href=\"/login\">\r\n              <Button className=\"nav-btns\">Login</Button>\r\n            </Nav.Link>\r\n            <Nav.Link href=\"/register\">\r\n              <Button className=\"nav-btns\">Cadastro</Button>\r\n            </Nav.Link>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </Navigation>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const HomeBannerContainer = styled.section`\r\n  background-color: var(--main-color);\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 1rem;\r\n\r\n  .intro-text {\r\n    flex: 2;\r\n    width: 40vw;\r\n    margin: 2rem;\r\n    color: var(--background-color);\r\n\r\n    h1 {\r\n      font-weight: 700;\r\n    }\r\n\r\n    p {\r\n      margin-top: 1rem;\r\n      font-size: 1.2rem;\r\n      font-weight: 500;\r\n    }\r\n\r\n    a {\r\n      background-color: var(--background-color);\r\n      border: 0;\r\n      border-radius: 8px;\r\n      color: var(--main-color);\r\n      font-size: 1rem;\r\n      font-weight: 600;\r\n      padding: 10px;\r\n    }\r\n  }\r\n\r\n  .intro-carousel {\r\n    flex: 3;\r\n    margin: 2rem;\r\n    box-shadow: 1px 2px 4px #000;\r\n    border-radius: 8px;\r\n\r\n    .carousel-inner {\r\n      border-radius: 8px;\r\n      padding: 10px;\r\n\r\n      img {\r\n        border-radius: 8px;\r\n        min-width: 300px;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (min-width: 720px) and (max-width: 900px) {\r\n    margin-top: 100px;\r\n    height: auto;\r\n\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    .intro-text {\r\n      margin: 0 auto;\r\n      width: 80vw;\r\n    }\r\n    .intro-carousel {\r\n      margin: 0 auto;\r\n      margin-top: 2rem;\r\n      width: 80vw;\r\n\r\n      img {\r\n        margin-top: 1rem;\r\n        width: 80vw;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 720px) {\r\n    margin-top: 100px;\r\n    height: auto;\r\n\r\n    .intro-carousel {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport { HomeBannerContainer } from \"./styles\";\r\n\r\n// import { Container } from './styles';\r\n\r\nconst HomeBanner: React.FC = () => {\r\n  return (\r\n    <HomeBannerContainer id=\"home\">\r\n      <div className=\"intro-text\">\r\n        <h1>Vitality é a solução que sua clínica precisa!</h1>\r\n        <p>\r\n          Uma aplicação para controle de prontuários e agenda de atendimentos.\r\n          Tenha as funcionalidades mais importantes reunidas em uma só\r\n          ferramenta!\r\n        </p>\r\n        <a href=\"/register\">Experimente!</a>\r\n      </div>\r\n      <div className=\"intro-carousel\">\r\n        <Carousel fade>\r\n          <Carousel.Item interval={500}>\r\n            <img className=\"d-block w-100\" src=\"./img/print_vit.png\" alt=\"\" />\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src=\"./img/print_vit.png\"\r\n              alt=\"Second slide\"\r\n            />\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={500}>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src=\"./img/print_vit3.png\"\r\n              alt=\"Third slide\"\r\n            />\r\n          </Carousel.Item>\r\n          <Carousel.Item interval={500}>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src=\"./img/print_vit4.png\"\r\n              alt=\"Third slide\"\r\n            />\r\n          </Carousel.Item>\r\n        </Carousel>\r\n      </div>\r\n    </HomeBannerContainer>\r\n  );\r\n};\r\n\r\nexport default HomeBanner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const AboutAppContainer = styled.main`\r\n  background-color: var(--background-color);\r\n\r\n  .content-container {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n\r\n    width: 90vw;\r\n    justify-content: space-between;\r\n    align-items: stretch;\r\n    gap: 3rem;\r\n\r\n    margin: 0 auto;\r\n\r\n    height: 100vh;\r\n\r\n    padding: 4rem 1rem;\r\n\r\n    div {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      flex: 1;\r\n\r\n      img {\r\n        margin: 0 auto;\r\n      }\r\n      h4 {\r\n        font-weight: 600;\r\n        margin-top: 1rem;\r\n        text-align: center;\r\n      }\r\n      p {\r\n        margin-top: 1rem;\r\n        text-align: center;\r\n        margin-bottom: 1rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 720px) {\r\n    height: auto;\r\n\r\n    .content-container {\r\n      height: fit-content;\r\n    }\r\n  }\r\n`;\r\n","import { AboutAppContainer } from \"./styles\";\r\n\r\nconst AboutApp: React.FC = () => {\r\n  return (\r\n    <AboutAppContainer id=\"app\">\r\n      <section className=\"content-container\">\r\n        <div>\r\n          <img src=\"./img/customer.png\" width=\"80px\" />\r\n          <h4>Cadastro de Clientes</h4>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n            Necessitatibus mollitia eligendi neque corrupti asperiores, qui odit\r\n            culpa. Provident praesentium necessitatibus deleniti mollitia\r\n            obcaecati architecto ab neque perferendis! Consequatur, qui aperiam.\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <img src=\"./img/register.png\" width=\"80px\" />\r\n          <h4>Cadastro de Especialistas</h4>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n            Necessitatibus mollitia eligendi neque corrupti asperiores, qui odit\r\n            culpa. Provident praesentium necessitatibus deleniti mollitia\r\n            obcaecati architecto ab neque perferendis! Consequatur, qui aperiam.\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <img src=\"./img/medical-appointment.png\" width=\"80px\" />\r\n          <h4>Agende atendimentos</h4>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n            Necessitatibus mollitia eligendi neque corrupti asperiores, qui odit\r\n            culpa. Provident praesentium necessitatibus deleniti mollitia\r\n            obcaecati architecto ab neque perferendis! Consequatur, qui aperiam.\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <img src=\"./img/profile.png\" width=\"80px\" />\r\n          <h4>Prontuários</h4>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n            Necessitatibus mollitia eligendi neque corrupti asperiores, qui odit\r\n            culpa. Provident praesentium necessitatibus deleniti mollitia\r\n            obcaecati architecto ab neque perferendis! Consequatur, qui aperiam.\r\n          </p>\r\n        </div>\r\n      </section>\r\n    </AboutAppContainer>\r\n  );\r\n};\r\n\r\nexport default AboutApp;\r\n","import styled from \"styled-components\";\r\n\r\nexport const AboutContainer = styled.section`\r\n  background-color: var(--main-color);\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  flex-wrap: wrap;\r\n  height: 100vh;\r\n\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 1rem;\r\n\r\n    img {\r\n      width: 250px;\r\n      border-radius: 50%;\r\n    }\r\n\r\n    h4 {\r\n      color: var(--background-color);\r\n      letter-spacing: 1px;\r\n      margin: 1rem;\r\n    }\r\n\r\n    a {\r\n      color: var(--secondary-color);\r\n      font-size: 1rem;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 720px) {\r\n    height: auto;\r\n  }\r\n`;\r\n","import { AiOutlineGithub, AiFillLinkedin } from \"react-icons/ai\";\r\nimport { AboutContainer } from \"./styles\";\r\n\r\nconst AboutUs: React.FC = () => {\r\n  return (\r\n    <AboutContainer id=\"about\">\r\n      <div>\r\n        <img src=\"./img/jessica.jpeg\" alt=\"Jéssica\" />\r\n        <h4>Jéssica Senger</h4>\r\n        <a href=\"https://github.com/jsenger\" target=\"_blank\">\r\n          Github <AiOutlineGithub />\r\n        </a>\r\n        <a href=\"https://www.linkedin.com/in/jessica-senger/\" target=\"_blank\">\r\n          Linkedin <AiFillLinkedin />\r\n        </a>\r\n      </div>\r\n      <div>\r\n        <img src=\"./img/luciana.jpg\" alt=\"Luciana\" />\r\n        <h4>Luciana Cunha</h4>\r\n        <a href=\"https://github.com/luc0liv\" target=\"_blank\">\r\n          Github <AiOutlineGithub />\r\n        </a>\r\n        <a href=\"https://www.linkedin.com/in/lucoliv/\" target=\"_blank\">\r\n          Linkedin <AiFillLinkedin />\r\n        </a>\r\n      </div>\r\n      <div>\r\n        <img src=\"./img/sillas.jpeg\" alt=\"Sillas\" />\r\n        <h4>Sillas Vidal</h4>\r\n        <a href=\"https://github.com/sillasvidal\" target=\"_blank\">\r\n          Github <AiOutlineGithub />\r\n        </a>\r\n        <a\r\n          href=\"https://www.linkedin.com/in/sillas-vidal-9739881b9/\"\r\n          target=\"_blank\"\r\n        >\r\n          Linkedin <AiFillLinkedin />\r\n        </a>\r\n      </div>\r\n    </AboutContainer>\r\n  );\r\n};\r\n\r\nexport default AboutUs;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactContainer = styled.section`\r\n  background-color: var(--main-button-color);\r\n\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  height: fit-content;\r\n  padding: 2rem;\r\n  margin: 0 auto;\r\n\r\n  .contact-img {\r\n    flex: 1;\r\n    min-width: 400px;\r\n    margin-top: 5rem;\r\n  }\r\n\r\n  form {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: auto;\r\n\r\n    border-radius: 8px;\r\n\r\n    padding: 2rem;\r\n\r\n    box-shadow: 1px 2px 7px var(--main-text-color);\r\n\r\n    background-color: var(--background-color);\r\n\r\n    h3 {\r\n      border-bottom: 1px solid var(--main-button-color);\r\n      padding-bottom: 1rem;\r\n      color: var(--main-color);\r\n      font-weight: 600;\r\n      letter-spacing: 1px;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    label {\r\n      color: var(--main-color);\r\n      font-weight: 600;\r\n      letter-spacing: 1px;\r\n    }\r\n\r\n    input {\r\n      border: 0;\r\n      border-radius: 4px;\r\n      height: 2.5rem;\r\n      margin-bottom: 1rem;\r\n    }\r\n    textarea {\r\n      border: 0;\r\n      border-radius: 4px;\r\n\r\n      height: 40%;\r\n    }\r\n\r\n    button {\r\n      margin-top: 1rem;\r\n\r\n      background-color: var(--main-button-color);\r\n      border: 0;\r\n      border-radius: 8px;\r\n      color: var(--main-color);\r\n      font-size: 1.3rem;\r\n      font-weight: 600;\r\n      letter-spacing: 1px;\r\n      padding: 10px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 720px) {\r\n    .contact-content {\r\n      height: auto;\r\n      padding: 1rem;\r\n      align-items: stretch;\r\n    }\r\n    .contact-img {\r\n      display: none;\r\n    }\r\n\r\n    form {\r\n      width: 80vw;\r\n    }\r\n  }\r\n`;\r\n","import { ContactContainer } from \"./styles\";\r\n\r\nconst Contact: React.FC = () => {\r\n  return (\r\n    <ContactContainer id=\"contact\">\r\n      <form>\r\n        <h3>Fale conosco</h3>\r\n        <label htmlFor=\"name\">Nome:</label>\r\n        <input type=\"text\" name=\"name\" id=\"name\" required />\r\n        <label htmlFor=\"email\">E-mail:</label>\r\n        <input type=\"email\" name=\"email\" id=\"email\" required />\r\n        <label htmlFor=\"message\">Mensagem:</label>\r\n        <textarea name=\"message\" id=\"message\" required />\r\n        <button type=\"submit\">Enviar</button>\r\n      </form>\r\n      <div className=\"contact-img\">\r\n        <img src=\"./img/contact-us.svg\" alt=\"\" />\r\n      </div>\r\n    </ContactContainer>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FooterContainer = styled.footer`\r\n  padding: 1rem;\r\n  background-color: var(--main-color);\r\n  text-align: center;\r\n\r\n  p {\r\n    color: var(--background-color);\r\n    font-weight: 500;\r\n    font-size: 1.2rem;\r\n    letter-spacing: 1px;\r\n  }\r\n`;\r\n","import { FooterContainer } from \"./styles\";\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <FooterContainer>\r\n      <p>Grilados © 2021</p>\r\n      <div>\r\n        Icons made by{\" \"}\r\n        <a href=\"https://www.freepik.com\" title=\"Freepik\">\r\n          Freepik\r\n        </a>{\" \"}\r\n        from{\" \"}\r\n        <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n          www.flaticon.com\r\n        </a>\r\n      </div>\r\n\r\n      <a href=\"https://storyset.com/business\">\r\n        Business illustrations by Storyset\r\n      </a>\r\n    </FooterContainer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport NavigationBar from \"../../../components/Navbar\";\r\nimport HomeBanner from \"../../../components/HomeBanner\";\r\nimport AboutApp from \"../../../components/AboutApp\";\r\nimport AboutUs from \"../../../components/AboutUs\";\r\nimport Contact from \"../../../components/Contact\";\r\nimport Footer from \"../../../components/Footer\";\r\n\r\nconst Home: React.FC = () => {\r\n  return (\r\n    <>\r\n      <NavigationBar />\r\n      <HomeBanner />\r\n      <AboutApp />\r\n      <AboutUs />\r\n      <Contact />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from 'styled-components';\r\n\r\nexport const BackHome = styled.main`\r\n  a {\r\n    background-color: var(--main-color);\r\n    padding: 20px;\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 10px;\r\n    border-radius: 8px;\r\n\r\n    text-decoration: none;\r\n    color: #fff;\r\n\r\n    .react-icons {\r\n    vertical-align: middle;\r\n    color: var(--main-button-color);\r\n    font-size: 2rem;\r\n    margin-right: 8px;\r\n  }\r\n  }\r\n`","import { Link } from 'react-router-dom';\r\nimport { HiOutlineHome } from 'react-icons/hi';\r\nimport { IconContext } from \"react-icons\";\r\nimport { BackHome } from './styles';\r\n\r\n\r\nconst BackToHome: React.FC = () => {\r\n  return (\r\n    <BackHome>\r\n    <IconContext.Provider value={{ className: 'react-icons' }}>\r\n    <Link to=\"/\"><HiOutlineHome /> Voltar para a página inicial</Link>\r\n    </IconContext.Provider>\r\n    </BackHome>\r\n  );\r\n}\r\n\r\nexport default BackToHome;","import axios from 'axios';\r\n\r\nexport const api = axios.create({\r\n  baseURL: 'https://desafioafya.herokuapp.com/',\r\n});\r\n\r\nexport const viaCepApi = axios.create({\r\n  baseURL: 'https://viacep.com.br/ws/',\r\n});","import styled from 'styled-components';\r\n\r\nexport const LoginContainer = styled.main`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n\r\n  width: 1000px;\r\n  max-width: 80%;\r\n  height: 100vh;\r\n\r\n  margin: auto;\r\n\r\n  div {\r\n    width: 40%;\r\n\r\n    img {\r\n      object-fit: cover;\r\n      width: 150%;\r\n    }\r\n  }\r\n\r\n  form {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n\r\n    background: var(--main-color);\r\n    color: var(--background-color);\r\n\r\n    border-radius: 8px;\r\n\r\n    width: 40%;\r\n    min-width: 300px;\r\n    padding: 2rem;\r\n\r\n    h1 {\r\n      width: 100%;\r\n      padding-bottom: 0.2rem;\r\n      margin-bottom: 1.5rem;\r\n\r\n      border-bottom: 1px solid;\r\n    }\r\n\r\n    label {\r\n      width: 100%;\r\n      margin-bottom: 0.5rem;\r\n    }\r\n\r\n    input {\r\n      width: 100%;\r\n      background: var(--background-color);\r\n      border: none;\r\n      border-radius: 8px;\r\n      padding: 10px;\r\n\r\n      &:not(:last-child) {\r\n        margin-bottom: 1rem;\r\n      }\r\n    }\r\n\r\n    button {\r\n      width: 100%;\r\n      height: 4rem;\r\n      margin-top: 1rem;\r\n\r\n      background: var(--main-button-color);\r\n      color: var(--main-text-color);\r\n\r\n      font-size: 2rem;\r\n      font-weight: bold;\r\n\r\n      border: none;\r\n      border-radius: 8px;\r\n\r\n      cursor: pointer;\r\n\r\n      transition: all 0.5s;\r\n\r\n      &:hover {\r\n        background: #fff;\r\n        color: #2f2e41;\r\n      }\r\n    }\r\n\r\n    p {\r\n      margin: 1rem auto 0;\r\n\r\n      a {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 720px) {\r\n    display: block;\r\n    height: fit-content;\r\n\r\n    form {\r\n      margin-top: 10rem;\r\n      width: 100%;\r\n    }\r\n    img {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n","import { FormEvent, useCallback, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport BackToHome from '../../../components/BackToHome';\r\nimport { api } from '../../../services/api';\r\n\r\nimport { LoginContainer } from './styles';\r\n\r\ninterface IUserLogin {\r\n  login: string;\r\n  password: string;\r\n}\r\n\r\nconst Login: React.FC = () => {\r\n  const [formDataContent, setFormDataContent] = useState<IUserLogin>(\r\n    {} as IUserLogin\r\n  );\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const loginSubmit = useCallback(\r\n    (e: FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n\r\n      if (formDataContent.login && formDataContent.password) {\r\n        setIsLoading(true);\r\n\r\n        api\r\n          .post('sessions', formDataContent)\r\n          .then(response => {\r\n            localStorage.setItem('@tokenVitality', response.data.token);\r\n            localStorage.setItem('@userNameVitality', response.data.user.name);\r\n            history.push('/dashboard');\r\n          })\r\n          .catch(err => {\r\n            Swal.fire({\r\n              title: 'Ops!',\r\n              text: 'Dados incorretos.',\r\n              icon: 'error',\r\n              confirmButtonText: 'Fechar',\r\n              confirmButtonColor: '#ff312e'\r\n            });\r\n          })\r\n          .finally(() => setIsLoading(false));\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Ops!',\r\n          text: 'Preencha todos os campos.',\r\n          icon: 'error',\r\n          confirmButtonText: 'Fechar',\r\n          confirmButtonColor: '#ff312e'\r\n        });\r\n      }\r\n    },\r\n    [formDataContent, history]\r\n  );\r\n\r\n  return (\r\n    <LoginContainer>\r\n      <BackToHome />\r\n      <div>\r\n        <img src=\"/img/login_illustration.svg\" alt=\"\" />\r\n      </div>\r\n      <form onSubmit={loginSubmit}>\r\n        {isLoading ? (\r\n          'Entrando...'\r\n        ) : (\r\n          <>\r\n            <h1>Login</h1>\r\n            <label htmlFor=\"\">Login:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"login\"\r\n              id=\"login\"\r\n              onChange={e =>\r\n                setFormDataContent({\r\n                  ...formDataContent,\r\n                  login: e.target.value,\r\n                })\r\n              }\r\n            />\r\n\r\n            <label htmlFor=\"\">Senha:</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              onChange={e =>\r\n                setFormDataContent({\r\n                  ...formDataContent,\r\n                  password: e.target.value,\r\n                })\r\n              }\r\n            />\r\n\r\n            <button type=\"submit\">Entrar</button>\r\n            <p>\r\n              Não tem uma conta? <Link to=\"/register\">Cadastre-se</Link>{' '}\r\n            </p>\r\n          </>\r\n        )}\r\n      </form>\r\n    </LoginContainer>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import styled from 'styled-components';\r\n\r\nexport const RegisterContainer = styled.main`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n\r\n\r\n  width: 1000px;\r\n  max-width: 80%;\r\n  height: 100vh;\r\n\r\n  margin: auto;\r\n\r\n  div {\r\n    width: 40%;\r\n    margin-right: 25px;\r\n\r\n    img {\r\n      width: 120%;\r\n\r\n    }\r\n  }\r\n\r\n  form {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n\r\n    background: var(--main-color);\r\n    color:var(--background-color);\r\n\r\n    border-radius: 8px;\r\n    min-width: 300px;\r\n    width: 40%;\r\n    padding: 2rem;\r\n\r\n    h1 {\r\n      width: 100%;\r\n      padding-bottom: 0.2rem;\r\n      margin-bottom: 1.5rem;\r\n\r\n      border-bottom: 1px solid;\r\n    }\r\n\r\n    label {\r\n      width: 100%;\r\n      margin-bottom: 0.5rem;\r\n    }\r\n\r\n    input {\r\n      width: 100%;\r\n      background: #fff;\r\n      border: none;\r\n      border-radius: 8px;\r\n      padding: 10px;\r\n\r\n      &:not(:last-child) {\r\n        margin-bottom: 1rem;\r\n      }\r\n    }\r\n\r\n    button {\r\n      width: 100%;\r\n      height: 4rem;\r\n      margin-top: 1rem;\r\n\r\n      background: var(--main-button-color);\r\n      color: var(--main-text-color);\r\n\r\n      font-size: 2rem;\r\n      font-weight: bold;\r\n\r\n      border: none;\r\n      border-radius: 8px;\r\n\r\n      cursor: pointer;\r\n\r\n      transition: all 0.5s;\r\n\r\n      &:hover {\r\n        background: #fff;\r\n        color: #2f2e41;\r\n      }\r\n    }\r\n\r\n    p {\r\n      margin: 1rem auto 0;\r\n\r\n      a {\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 720px) {\r\n    display: block;\r\n    height: fit-content;\r\n\r\n    form {\r\n      margin-top: 10rem;\r\n      width: 100%;\r\n    }\r\n    img {\r\n      display: none;\r\n    }\r\n  }\r\n`","import { FormEvent, useCallback, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport BackToHome from '../../../components/BackToHome';\r\nimport { api } from '../../../services/api';\r\n\r\nimport { RegisterContainer } from './styles';\r\n\r\ninterface IUser {\r\n  name: string;\r\n  login: string;\r\n  password: string;\r\n}\r\n\r\nconst Register: React.FC = () => {\r\n  const [formDataContent, setFormDataContent] = useState<IUser>({} as IUser);\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const registrationSubmit = useCallback(\r\n    (e: FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n\r\n      if (\r\n        formDataContent.name &&\r\n        formDataContent.login &&\r\n        formDataContent.password\r\n      ) {\r\n        setIsLoading(true);\r\n\r\n        api\r\n          .post('users', formDataContent)\r\n          .then(response => {\r\n            Swal.fire({\r\n              title: 'Sucesso!',\r\n              text: 'Sua conta foi criada com sucesso.',\r\n              icon: 'success',\r\n              confirmButtonText: 'Ir para login',\r\n              confirmButtonColor: \"#004AAD\"\r\n            }).then(response => history.push('/login'));\r\n          })\r\n          .catch(err => {\r\n            let errorMessage;\r\n\r\n            if (err.response.data.message === 'User already booked')\r\n              errorMessage = 'Nome de usuário não está disponível.';\r\n            else\r\n              errorMessage = 'Não foi possível criar usuário, tente novamente.';\r\n\r\n            Swal.fire({\r\n              title: 'Ops!',\r\n              text: errorMessage,\r\n              icon: 'error',\r\n              confirmButtonText: 'Fechar',\r\n              confirmButtonColor: '#ff312e'\r\n            });\r\n          })\r\n          .finally(() => setIsLoading(false));\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Ops!',\r\n          text: 'Preencha todos os campos.',\r\n          icon: 'error',\r\n          confirmButtonText: 'Fechar',\r\n        });\r\n      }\r\n    },\r\n    [formDataContent, history]\r\n  );\r\n\r\n  return (\r\n    <RegisterContainer>\r\n      <BackToHome />\r\n      <div>\r\n        <img src=\"/img/register_illustration.svg\" alt=\"\" />\r\n      </div>\r\n      <form onSubmit={registrationSubmit}>\r\n        {isLoading ? (\r\n          'Criando conta...'\r\n        ) : (\r\n          <>\r\n            <h1>Cadastro</h1>\r\n            <label htmlFor=\"name\">Nome:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              onChange={e =>\r\n                setFormDataContent({\r\n                  ...formDataContent,\r\n                  name: e.target.value,\r\n                })\r\n              }\r\n            />\r\n\r\n            <label htmlFor=\"login\">Login:</label>\r\n            <input\r\n              type=\"login\"\r\n              name=\"login\"\r\n              id=\"login\"\r\n              maxLength={20}\r\n              onChange={e =>\r\n                setFormDataContent({\r\n                  ...formDataContent,\r\n                  login: e.target.value,\r\n                })\r\n              }\r\n            />\r\n\r\n            <label htmlFor=\"password\">Senha:</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              onChange={e =>\r\n                setFormDataContent({\r\n                  ...formDataContent,\r\n                  password: e.target.value,\r\n                })\r\n              }\r\n            />\r\n\r\n            <button type=\"submit\">Cadastrar</button>\r\n          </>\r\n        )}\r\n      </form>\r\n    </RegisterContainer>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport isAuthenticated from './services/auth';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }: any) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        isAuthenticated() ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import styled from \"styled-components\";\r\n\r\nexport const DashboardContainer = styled.main`\r\n  margin-top: 80px;\r\n\r\n  h1 {\r\n    margin-right: 50px;\r\n    margin-bottom: 1rem;\r\n    text-align: right;\r\n    font-weight: 600;\r\n    padding: 1rem;\r\n  }\r\n\r\n  .spinner-border {\r\n    width: 5rem;\r\n    height: 5rem;\r\n  }\r\n`;\r\n","export const logout = () => {\r\n  localStorage.clear();\r\n  window.location.reload();\r\n}","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport clsx from \"clsx\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport { HiMenu } from \"react-icons/hi\";\r\nimport { BiLogOut } from \"react-icons/bi\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nimport { SideBarContainer } from \"./styles\";\r\nimport { logout } from \"../../services/logout\";\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      position: \"relative\",\r\n    },\r\n    appBar: {\r\n      transition: theme.transitions.create([\"margin\", \"width\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      backgroundColor: \"#004AAD\",\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      color: \"#ecebe4\",\r\n      backgroundColor: \"#004AAD\",\r\n    },\r\n    drawerHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: \"space-between\",\r\n    },\r\n    drawerList: {\r\n      backgroundColor: \"#004AAD\",\r\n      display: \"flex\",\r\n      height: 400,\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      gap: 20,\r\n    },\r\n    drawerListItems: {\r\n      color: \"#ECEBE4\",\r\n      fontFamily: \"Roboto\",\r\n    },\r\n    logoutItem: {\r\n      color: \"#F4E04D\",\r\n    },\r\n    backdrop: {\r\n      position: \"fixed\",\r\n      zIndex: 2,\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n      backgroundColor: \"#000000a6\",\r\n    },\r\n  })\r\n);\r\n\r\ninterface SideBarProps {\r\n  title: string;\r\n}\r\n\r\nexport default function Sidebar(props: SideBarProps) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n          >\r\n            <IconContext.Provider value={{ color: \"#fff\", size: \"35px\" }}>\r\n              <HiMenu />\r\n            </IconContext.Provider>\r\n          </IconButton>\r\n          {props.title}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <img src=\"./img/vit_logo.svg\" alt=\"Vitality logo\" width=\"100px\" />\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <IconContext.Provider value={{ color: \"#fff\", size: \"35px\" }}>\r\n              <IoClose />\r\n            </IconContext.Provider>\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List className={classes.drawerList}>\r\n          {[\r\n            { title: \"Dashboard\", url: \"/dashboard\" },\r\n            { title: \"Clientes\", url: \"/clients\" },\r\n            { title: \"Especialistas\", url: \"/specialists\" },\r\n            { title: \"Atendimentos\", url: \"/appointments\" },\r\n            { title: \"Prontuários\", url: \"/charts\" },\r\n          ].map((item, index) => (\r\n            <Link to={item.url} key={item.title}>\r\n              <ListItem button>\r\n                <ListItemText\r\n                  primary={item.title}\r\n                  className={classes.drawerListItems}\r\n                />\r\n              </ListItem>\r\n            </Link>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button>\r\n            <ListItemText\r\n              primary={\"Logout\"}\r\n              className={classes.logoutItem}\r\n              onClick={logout}\r\n            />\r\n            <IconContext.Provider value={{ color: \"#F4E04D\", size: \"2rem\" }}>\r\n              <BiLogOut />\r\n            </IconContext.Provider>\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <div\r\n        className={clsx(\"\", {\r\n          [classes.backdrop]: open,\r\n        })}\r\n      ></div>\r\n    </div>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const DashboardChartContainer = styled.main`\r\n  .chart-container {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n\r\n    width: 90vw;\r\n    margin: 0 auto;\r\n\r\n    background-color: #e9ecef;\r\n    border-radius: 8px;\r\n    padding: 1rem;\r\n\r\n    .pacients {\r\n      color: var(--main-text-color);\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n\r\n      h1 {\r\n        font-size: 3rem;\r\n        font-weight: 500;\r\n        margin: 0 auto;\r\n      }\r\n\r\n      p {\r\n        font-weight: 500;\r\n      }\r\n    }\r\n\r\n    .confirmed {\r\n      color: var(--main-color);\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n\r\n      h1 {\r\n        font-size: 3rem;\r\n        font-weight: 500;\r\n        margin: 0 auto;\r\n      }\r\n\r\n      p {\r\n        font-weight: 500;\r\n      }\r\n    }\r\n\r\n    .accomplished {\r\n      color: #43aa8b;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n\r\n      h1 {\r\n        font-size: 3rem;\r\n        font-weight: 500;\r\n        margin: 0 auto;\r\n      }\r\n\r\n      p {\r\n        font-weight: 500;\r\n      }\r\n    }\r\n\r\n    .canceled {\r\n      color: var(--danger-color);\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n\r\n      h1 {\r\n        font-size: 3rem;\r\n        font-weight: 500;\r\n        margin: 0 auto;\r\n      }\r\n\r\n      p {\r\n        font-weight: 500;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { AiOutlineCheckCircle } from 'react-icons/ai';\r\nimport { IoMdDoneAll } from 'react-icons/io';\r\nimport { ImCancelCircle } from 'react-icons/im';\r\n\r\nimport { DashboardChartContainer } from './styles';\r\n\r\ninterface DashboardChartProps {\r\n  medicalCaresCanceled: number;\r\n  medicalCaresCompleted: number;\r\n  medicalCaresConfirmed: number;\r\n  quantityClients: number;\r\n}\r\n\r\nconst DashboardChart = ({\r\n  medicalCaresCanceled,\r\n  medicalCaresCompleted,\r\n  medicalCaresConfirmed,\r\n  quantityClients,\r\n}: DashboardChartProps) => {\r\n  return (\r\n    <DashboardChartContainer>\r\n      <section className=\"chart-container\">\r\n        <div className=\"pacients\">\r\n          <h1>{quantityClients}</h1>\r\n          <p>Pacientes cadastrados</p>\r\n        </div>\r\n        <div className=\"confirmed\">\r\n          <h1>{medicalCaresConfirmed}</h1>\r\n          <p>\r\n            Atendimentos confirmados <AiOutlineCheckCircle />\r\n          </p>\r\n        </div>\r\n        <div className=\"accomplished\">\r\n          <h1>{medicalCaresCompleted}</h1>\r\n          <p>\r\n            Atendimentos realizados <IoMdDoneAll />\r\n          </p>\r\n        </div>\r\n        <div className=\"canceled\">\r\n          <h1>{medicalCaresCanceled}</h1>\r\n          <p>\r\n            Atendimentos cancelados <ImCancelCircle />\r\n          </p>\r\n        </div>\r\n      </section>\r\n    </DashboardChartContainer>\r\n  );\r\n};\r\n\r\nexport default DashboardChart;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PieChartContainer = styled.main`\r\n  .pie-container {\r\n    width: 90vw;\r\n    margin: 0 auto;\r\n    margin-top: 1rem;\r\n    padding: 1rem;\r\n\r\n    background-color: var(--secondary-bg-color);\r\n    border-radius: 8px;\r\n  }\r\n`;\r\n","import PieChart, {\r\n  Legend,\r\n  Series,\r\n  Tooltip,\r\n  Format,\r\n  Label,\r\n  Connector,\r\n} from 'devextreme-react/pie-chart';\r\n\r\nimport { PieChartContainer } from './styles';\r\n\r\ninterface PieChartComponentProps {\r\n  quantityProfessions: object;\r\n}\r\n\r\nconst PieChartComponent = ({ quantityProfessions }: PieChartComponentProps) => {\r\n  const customizeTooltip = (arg: any) => {\r\n    return {\r\n      text: `${arg.valueText} - ${(arg.percent * 100).toFixed(2)}%`,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <PieChartContainer>\r\n      <div className=\"pie-container\">\r\n        <PieChart\r\n          id=\"pie\"\r\n          type=\"doughnut\"\r\n          title=\"Especialidades cadastradas\"\r\n          palette=\"Soft Pastel\"\r\n          dataSource={Object.keys(quantityProfessions).map(\r\n            (profession, index) => {\r\n              return {\r\n                profession,\r\n                val: Object.values(quantityProfessions)[index],\r\n              };\r\n            }\r\n          )}\r\n        >\r\n          <Series argumentField=\"profession\">\r\n            <Label visible={true}>\r\n              <Connector visible={true} />\r\n            </Label>\r\n          </Series>\r\n          <Legend horizontalAlignment=\"right\" verticalAlignment=\"top\" />\r\n          <Tooltip enabled={true} customizeTooltip={customizeTooltip}>\r\n            <Format />\r\n          </Tooltip>\r\n        </PieChart>\r\n      </div>\r\n    </PieChartContainer>\r\n  );\r\n};\r\n\r\nexport default PieChartComponent;\r\n","import { DashboardContainer } from './styles';\r\nimport Sidebar from '../../../components/Sidebar';\r\nimport DashboardChart from '../../../components/DashboardChart';\r\nimport PieChartComponent from '../../../components/PieChart';\r\nimport { useEffect } from 'react';\r\nimport { api } from '../../../services/api';\r\nimport { logout } from '../../../services/logout';\r\nimport Swal from 'sweetalert2';\r\nimport { useState } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\ninterface DashboardData {\r\n  medicalCaresCanceled: number;\r\n  medicalCaresCompleted: number;\r\n  medicalCaresConfirmed: number;\r\n  quantityClients: number;\r\n  quantityProfessions: object;\r\n}\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n  const [dashboardData, setDashboardData] = useState<DashboardData>(\r\n    {} as DashboardData\r\n  );\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get('dashboard', {\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem('@tokenVitality')}`,\r\n        },\r\n      })\r\n      .then(response => setDashboardData(response.data))\r\n      .catch(err => {\r\n        if (err.response.data.message === 'Invalid JWT token') {\r\n          logout();\r\n        } else {\r\n          Swal.fire({\r\n            title: 'Ops!',\r\n            text: 'Houve um erro ao carregar seus dados.',\r\n            icon: 'error',\r\n            confirmButtonText: 'Atualizar',\r\n            confirmButtonColor: '#ff312e',\r\n          }).then(response => window.location.reload());\r\n        }\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  }, []);\r\n\r\n  return (\r\n    <DashboardContainer className={isLoading ? 'text-center' : ''}>\r\n      <Sidebar title=\"Dashboard\" />\r\n      {isLoading ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Carregando...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <>\r\n          <h1>Olá, {localStorage.getItem('@userNameVitality')}!</h1>\r\n          <DashboardChart\r\n            medicalCaresCanceled={dashboardData.medicalCaresCanceled}\r\n            medicalCaresCompleted={dashboardData.medicalCaresCompleted}\r\n            medicalCaresConfirmed={dashboardData.medicalCaresConfirmed}\r\n            quantityClients={dashboardData.quantityClients}\r\n          />\r\n          <PieChartComponent\r\n            quantityProfessions={dashboardData.quantityProfessions}\r\n          />\r\n        </>\r\n      )}\r\n    </DashboardContainer>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ModalContainer = styled.div`\r\n  display: none;\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 0;\r\n  top: 0;\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background-color: var(--background-color);\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n\r\n  &.show {\r\n    display: block;\r\n  }\r\n\r\n  button {\r\n    background-color: var(--main-button-color);\r\n    border: 0;\r\n    border-radius: 8px;\r\n    color: var(--main-color);\r\n    font-size: 1.2rem;\r\n    font-weight: bold;\r\n    letter-spacing: 1px;\r\n    padding: 1rem;\r\n\r\n    transition: 0.2s ease-in-out;\r\n\r\n    &:hover {\r\n      box-shadow: 5px 6px 5px 0px rgba(0, 0, 0, 0.49);\r\n    }\r\n  }\r\n\r\n  .modal-content {\r\n    background-color: var(--main-color);\r\n    color: var(--main-button-color);\r\n    margin: 15% auto;\r\n    padding: 20px;\r\n    border: 0;\r\n    box-shadow: 5px 6px 5px 0px rgba(0, 0, 0, 0.49);\r\n    width: 80%;\r\n\r\n    .modal-header {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n\r\n      h4 {\r\n        font-weight: 700;\r\n        letter-spacing: 1px;\r\n      }\r\n\r\n      .close {\r\n        color: var(--background-color);\r\n        float: right;\r\n        font-size: 3rem;\r\n        font-weight: bold;\r\n\r\n        &:hover,\r\n        &:focus {\r\n          color: black;\r\n          text-decoration: none;\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n\r\n    label {\r\n      font-weight: 600;\r\n      letter-spacing: 0.5px;\r\n    }\r\n  }\r\n`;\r\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react';\r\nimport InputMask from 'react-input-mask';\r\nimport Swal from 'sweetalert2';\r\nimport { viaCepApi } from '../../services/api';\r\nimport { Address } from '../../types';\r\n\r\ninterface AddressFormProps {\r\n  address: Address;\r\n  setAddress: (address: Address) => void;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst AddressForm = ({ address, setAddress, isLoading }: AddressFormProps) => {\r\n  const [cep, setCep] = useState<string>('');\r\n  const [isLoadingCep, setIsLoadingCep] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (cep.length === 8) {\r\n      setIsLoadingCep(true);\r\n      viaCepApi\r\n        .get(`${cep}/json`)\r\n        .then(response => {\r\n          setAddress({\r\n            ...address,\r\n            street: response.data.logradouro,\r\n            neighborhood: response.data.bairro,\r\n            city: response.data.localidade,\r\n            state: response.data.uf,\r\n          });\r\n        })\r\n        .catch(err => {\r\n          setAddress({\r\n            ...address,\r\n            street: '',\r\n            neighborhood: '',\r\n            city: '',\r\n            state: '',\r\n          });\r\n          Swal.fire({\r\n            title: 'Ops!',\r\n            text: 'Verifique se o Cep digitado está correto!',\r\n            icon: 'error',\r\n            confirmButtonText: 'Fechar',\r\n            confirmButtonColor: '#ff312e',\r\n          }).finally(() => setIsLoadingCep(false));\r\n        });\r\n    }\r\n  }, [cep]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group col-md-4\">\r\n          <label htmlFor=\"cep\">CEP:</label>\r\n          <InputMask\r\n            mask=\"99999-999\"\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"cep\"\r\n            id=\"cep\"\r\n            required\r\n            pattern=\"^[0-9]{5}-[0-9]{3}$\"\r\n            disabled={isLoading}\r\n            value={address?.cep || ''}\r\n            onChange={e => {\r\n              setCep(e.target.value.replace(/-|_/g, ''));\r\n              setAddress({\r\n                ...address,\r\n                cep: e.target.value,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group col-md-8\">\r\n          <label htmlFor=\"street\">Logradouro:</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"street\"\r\n            id=\"street\"\r\n            required\r\n            value={address?.street || ''}\r\n            disabled={isLoading && isLoadingCep}\r\n            onChange={e =>\r\n              setAddress({\r\n                ...address,\r\n                street: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group col-md-4\">\r\n          <label htmlFor=\"number\">Número:</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"number\"\r\n            name=\"number\"\r\n            id=\"number\"\r\n            min=\"1\"\r\n            required\r\n            value={address?.number || ''}\r\n            disabled={isLoading}\r\n            onChange={e =>\r\n              setAddress({\r\n                ...address,\r\n                number: Number(e.target.value),\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-8\">\r\n          <label htmlFor=\"neighborhood\">Bairro:</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"neighborhood\"\r\n            id=\"neighborhood\"\r\n            required\r\n            value={address?.neighborhood || ''}\r\n            disabled={isLoading && isLoadingCep}\r\n            onChange={e =>\r\n              setAddress({\r\n                ...address,\r\n                neighborhood: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group col-md-8\">\r\n          <label htmlFor=\"city\">Cidade:</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"city\"\r\n            id=\"city\"\r\n            required\r\n            value={address?.city || ''}\r\n            disabled={isLoading && isLoadingCep}\r\n            onChange={e =>\r\n              setAddress({\r\n                ...address,\r\n                city: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-md-4\">\r\n          <label htmlFor=\"state\">Estado:</label>\r\n          <select\r\n            className=\"form-control\"\r\n            required\r\n            name=\"state\"\r\n            defaultValue={''}\r\n            value={address?.state || ''}\r\n            disabled={isLoading && isLoadingCep}\r\n            onChange={e =>\r\n              setAddress({\r\n                ...address,\r\n                state: e.target.value,\r\n              })\r\n            }\r\n          >\r\n            <option value=\"\" disabled></option>\r\n            <option value=\"AC\">AC</option>\r\n            <option value=\"AL\">AL</option>\r\n            <option value=\"AP\">AP</option>\r\n            <option value=\"AM\">AM</option>\r\n            <option value=\"BA\">BA</option>\r\n            <option value=\"CE\">CE</option>\r\n            <option value=\"DF\">DF</option>\r\n            <option value=\"ES\">ES</option>\r\n            <option value=\"GO\">GO</option>\r\n            <option value=\"MA\">MA</option>\r\n            <option value=\"MT\">MT</option>\r\n            <option value=\"MS\">MS</option>\r\n            <option value=\"MG\">MG</option>\r\n            <option value=\"PA\">PA</option>\r\n            <option value=\"PB\">PB</option>\r\n            <option value=\"PR\">PR</option>\r\n            <option value=\"PE\">PE</option>\r\n            <option value=\"PI\">PI</option>\r\n            <option value=\"RJ\">RJ</option>\r\n            <option value=\"RN\">RN</option>\r\n            <option value=\"RS\">RS</option>\r\n            <option value=\"RO\">RO</option>\r\n            <option value=\"RR\">RR</option>\r\n            <option value=\"SC\">SC</option>\r\n            <option value=\"SP\">SP</option>\r\n            <option value=\"SE\">SE</option>\r\n            <option value=\"TO\">TO</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n","import {\r\n  Dispatch,\r\n  FormEvent,\r\n  SetStateAction,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport InputMask from 'react-input-mask';\r\n\r\nimport { api } from '../../services/api';\r\n\r\nimport { ModalContainer } from '../../assets/ModalStyles';\r\nimport AddressForm from '../AddressForm';\r\nimport { Address, Client } from '../../types';\r\nimport { logout } from '../../services/logout';\r\n\r\ninterface ClientsModalProps {\r\n  state: boolean;\r\n  setState: Dispatch<SetStateAction<boolean>>;\r\n  clients: Client[];\r\n  setClients: Dispatch<SetStateAction<Client[]>>;\r\n  currentClient: Client;\r\n  setCurrentClient: Dispatch<SetStateAction<Client>>;\r\n}\r\n\r\nconst ClientsModal = ({\r\n  state,\r\n  setState,\r\n  clients,\r\n  setClients,\r\n  currentClient,\r\n  setCurrentClient,\r\n}: ClientsModalProps) => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const handleModalClose = () => {\r\n    setState(false);\r\n  };\r\n\r\n  const setAddress = (address: Address) => {\r\n    setCurrentClient({ ...currentClient, address });\r\n  };\r\n\r\n  const clientSubmit = useCallback(\r\n    (e: FormEvent<HTMLFormElement>) => {\r\n      const form = e.currentTarget;\r\n\r\n      e.preventDefault();\r\n\r\n      if (form.checkValidity()) {\r\n        setIsLoading(true);\r\n\r\n        if (currentClient.new) {\r\n          api\r\n            .post('clients', currentClient, {\r\n              headers: {\r\n                authorization: `Bearer ${localStorage.getItem(\r\n                  '@tokenVitality'\r\n                )}`,\r\n              },\r\n            })\r\n            .then(response => {\r\n              setClients([currentClient, ...clients]);\r\n              Swal.fire({\r\n                title: 'Sucesso!',\r\n                text: 'Cliente cadastrado com sucesso.',\r\n                icon: 'success',\r\n                confirmButtonText: 'Fechar',\r\n                confirmButtonColor: '#004AAD',\r\n              }).then(() => handleModalClose);\r\n            })\r\n            .catch(err => {\r\n              let errorMessage = '';\r\n\r\n              if (err.response.data.message === 'Invalid JWT token') {\r\n                logout();\r\n              } else if (\r\n                err.response.data.message ===\r\n                'Client already booked with this cpf'\r\n              ) {\r\n                errorMessage = 'CPF já cadastrado.';\r\n              } else {\r\n                errorMessage = 'Dados incorretos.';\r\n              }\r\n\r\n              Swal.fire({\r\n                title: 'Ops!',\r\n                text: errorMessage,\r\n                icon: 'error',\r\n                confirmButtonText: 'Fechar',\r\n                confirmButtonColor: '#ff312e',\r\n              });\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n        } else {\r\n          api\r\n            .put('clients', currentClient, {\r\n              headers: {\r\n                authorization: `Bearer ${localStorage.getItem(\r\n                  '@tokenVitality'\r\n                )}`,\r\n              },\r\n            })\r\n            .then(response => {\r\n              setClients(\r\n                clients.map(client =>\r\n                  client.id === currentClient.id ? currentClient : client\r\n                )\r\n              );\r\n\r\n              Swal.fire({\r\n                title: 'Sucesso!',\r\n                text: 'Cliente atualizado com sucesso.',\r\n                icon: 'success',\r\n                confirmButtonText: 'Fechar',\r\n                confirmButtonColor: '#004AAD',\r\n              }).then(() => handleModalClose);\r\n            })\r\n            .catch(err => {\r\n              let errorMessage = '';\r\n\r\n              if (err.response.data.message === 'Invalid JWT token') {\r\n                logout();\r\n              } else if (\r\n                err.response.data.message ===\r\n                'Client already booked with this cpf'\r\n              ) {\r\n                errorMessage = 'CPF já cadastrado.';\r\n              } else {\r\n                errorMessage = 'Dados incorretos.';\r\n              }\r\n\r\n              Swal.fire({\r\n                title: 'Ops!',\r\n                text: errorMessage,\r\n                icon: 'error',\r\n                confirmButtonText: 'Fechar',\r\n                confirmButtonColor: '#ff312e',\r\n              });\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n        }\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Ops!',\r\n          text: 'Verifique se todos os campos estão preenchidos corretamente.',\r\n          icon: 'error',\r\n          confirmButtonText: 'Fechar',\r\n          confirmButtonColor: '#ff312e',\r\n        });\r\n      }\r\n    },\r\n    [currentClient, clients, setClients]\r\n  );\r\n\r\n  return (\r\n    <ModalContainer className={state ? 'show' : ''}>\r\n      <form className=\"modal-content\" onSubmit={clientSubmit} noValidate>\r\n        <div className=\"modal-header\">\r\n          <h4>Cadastro de cliente</h4>\r\n          <span className=\"close\" onClick={handleModalClose}>\r\n            &times;\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"modal-body\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Nome:</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              disabled={isLoading}\r\n              value={currentClient.name || ''}\r\n              required\r\n              onChange={e =>\r\n                setCurrentClient({\r\n                  ...currentClient,\r\n                  name: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"cpf\">CPF:</label>\r\n              <InputMask\r\n                mask=\"999.999.999-99\"\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"cpf\"\r\n                id=\"cpf\"\r\n                value={currentClient.cpf || ''}\r\n                pattern=\"^[0-9]{3}\\.[0-9]{3}\\.[0-9]{3}-[0-9]{2}$\"\r\n                disabled={isLoading}\r\n                required\r\n                onChange={e =>\r\n                  setCurrentClient({\r\n                    ...currentClient,\r\n                    cpf: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"phone\">Telefone:</label>\r\n              <InputMask\r\n                mask=\"(99) 9999-9999\"\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                id=\"phone\"\r\n                value={currentClient.phone || ''}\r\n                pattern=\"^\\([0-9]{2}\\) [0-9]{4}-[0-9]{4}$\"\r\n                disabled={isLoading}\r\n                required\r\n                onChange={e =>\r\n                  setCurrentClient({\r\n                    ...currentClient,\r\n                    phone: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"cellphone\">Celular:</label>\r\n              <InputMask\r\n                mask=\"(99) 99999-9999\"\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"cellphone\"\r\n                id=\"cellphone\"\r\n                value={currentClient.cellphone || ''}\r\n                pattern=\"^\\([0-9]{2}\\) [0-9]{5}-[0-9]{4}$\"\r\n                disabled={isLoading}\r\n                required\r\n                onChange={e =>\r\n                  setCurrentClient({\r\n                    ...currentClient,\r\n                    cellphone: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-8\">\r\n              <label htmlFor=\"email\">E-mail:</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                value={currentClient.email || ''}\r\n                disabled={isLoading}\r\n                required\r\n                onChange={e =>\r\n                  setCurrentClient({\r\n                    ...currentClient,\r\n                    email: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-md-4\">\r\n              <label htmlFor=\"bloodType\">Tipo sanguíneo:</label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"bloodType\"\r\n                id=\"bloodType\"\r\n                disabled={isLoading}\r\n                defaultValue={''}\r\n                value={currentClient.blood_type || ''}\r\n                required\r\n                onChange={e =>\r\n                  setCurrentClient({\r\n                    ...currentClient,\r\n                    blood_type: e.target.value,\r\n                  })\r\n                }\r\n              >\r\n                <option value=\"\" disabled></option>\r\n                <option value=\"A+\">A+</option>\r\n                <option value=\"A-\">A-</option>\r\n                <option value=\"B+\">B+</option>\r\n                <option value=\"B-\">B-</option>\r\n                <option value=\"O+\">O+</option>\r\n                <option value=\"O-\">O-</option>\r\n                <option value=\"AB+\">AB+</option>\r\n                <option value=\"AB-\">AB-</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <AddressForm\r\n            address={currentClient.address}\r\n            setAddress={setAddress}\r\n            isLoading={isLoading}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"modal-footer\">\r\n          <button type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? 'Salvando...' : 'Salvar cliente'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </ModalContainer>\r\n  );\r\n};\r\n\r\nexport default ClientsModal;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TableContainer = styled.div`\r\n  margin: 0 auto;\r\n  margin-top: 50px;\r\n  height: 50vh;\r\n  overflow: auto;\r\n  width: 90%;\r\n\r\n  border-radius: 8px;\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 10px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-track {\r\n    background: #f1f1f1;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #888;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #555;\r\n  }\r\n\r\n  table {\r\n    margin: 0 auto;\r\n    height: 300px;\r\n\r\n    thead {\r\n      border-radius: 8px;\r\n      background-color: var(--main-color);\r\n      color: var(--background-color);\r\n      letter-spacing: 1px;\r\n    }\r\n\r\n    tbody tr {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n","import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\nimport { Spinner, Table } from \"react-bootstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport { api } from \"../../../services/api\";\r\nimport { logout } from \"../../../services/logout\";\r\nimport { Client } from \"../../../types\";\r\nimport { TableContainer } from \"./styles\";\r\n\r\ninterface ClientsTableProps {\r\n  clients: Client[];\r\n  setClients: Dispatch<SetStateAction<Client[]>>;\r\n  handleModalOpen: () => void;\r\n  setCurrentClient: Dispatch<SetStateAction<Client>>;\r\n}\r\n\r\nconst ClientsTable = ({\r\n  clients,\r\n  setClients,\r\n  handleModalOpen,\r\n  setCurrentClient,\r\n}: ClientsTableProps) => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"clients\", {\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem(\"@tokenVitality\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setClients(response.data);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.data.message === \"Invalid JWT token\") {\r\n          logout();\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Ops!\",\r\n            text: \"Houve um erro ao carregar seus dados.\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"Atualizar\",\r\n            confirmButtonColor: \"#ff312e\",\r\n          }).then((response) => window.location.reload());\r\n        }\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  }, [setClients]);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table striped bordered hover responsive=\"lg\">\r\n        <thead>\r\n          <tr>\r\n            <th>Cliente</th>\r\n            <th>E-mail</th>\r\n            <th>Celular</th>\r\n            <th>Telefone</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {isLoading\r\n            ? <div>Carregando...<Spinner animation=\"border\" /></div>\r\n            : !Object.keys(clients[0]).length\r\n            ? \"Nenhum cliente cadastrado.\"\r\n            : clients.map((client, index) => (\r\n                <tr\r\n                  key={index}\r\n                  onClick={() => {\r\n                    handleModalOpen();\r\n                    setCurrentClient({ ...client, new: false });\r\n                  }}\r\n                >\r\n                  <td>{client.name}</td>\r\n                  <td>{client.email}</td>\r\n                  <td>{client.cellphone}</td>\r\n                  <td>{client.phone}</td>\r\n                </tr>\r\n              ))}\r\n        </tbody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default ClientsTable;\r\n","import { api } from './api';\r\n\r\ninterface SearchParams {\r\n  endpoint: string;\r\n  params: object;\r\n}\r\n\r\nexport const search = ({ endpoint, params }: SearchParams) => {\r\n  return api\r\n    .get(endpoint, {\r\n      headers: {\r\n        authorization: `Bearer ${localStorage.getItem('@tokenVitality')}`,\r\n      },\r\n      params\r\n    })\r\n    .then(response => response);\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchField = styled.form`\r\n  align-items: center;\r\n  background-color: var(--main-color);\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n  margin-top: 50px;\r\n\r\n  border-radius: 8px;\r\n  min-width: 300px;\r\n  padding: 1rem;\r\n  width: 85vw;\r\n\r\n  label {\r\n    color: var(--background-color);\r\n    font-size: 1.2rem;\r\n    font-weight: 500;\r\n    letter-spacing: 1px;\r\n    //margin-right: 1px;\r\n    flex: 1;\r\n  }\r\n\r\n  input[type=\"text\"] {\r\n    border: 0;\r\n    border-radius: 4px;\r\n    padding: 8px;\r\n    flex: 2;\r\n  }\r\n\r\n  button {\r\n    background-color: var(--main-button-color);\r\n    border: 0;\r\n    border-radius: 1.5rem;\r\n\r\n    color: var(--main-color);\r\n    font-size: 1rem;\r\n    font-weight: 700;\r\n    letter-spacing: 1px;\r\n\r\n    margin-left: -12px;\r\n\r\n    transition: ease-in-out 0.4s;\r\n    padding: 10px;\r\n    flex: 1;\r\n\r\n    &:hover {\r\n      filter: brightness(1.5);\r\n    }\r\n  }\r\n\r\n  @media (max-width: 360px) {\r\n    width: 80%;\r\n    button {\r\n      margin-top: 10px;\r\n      margin-left: 0;\r\n\r\n      flex: 1;\r\n    }\r\n\r\n    input {\r\n      flex: 1;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 360px) and (max-width: 720px) {\r\n    width: 80%;\r\n    button {\r\n      margin: 10px;\r\n\r\n      flex: 1;\r\n    }\r\n\r\n    input {\r\n      flex: 1;\r\n    }\r\n  }\r\n`;\r\n","import {\r\n  Dispatch,\r\n  FormEvent,\r\n  SetStateAction,\r\n  useCallback,\r\n  useState,\r\n} from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { search } from '../../services/search';\r\nimport { SearchField } from './styles';\r\n\r\ninterface SearchProps {\r\n  title: string;\r\n  endpoint: string;\r\n  setResult: Dispatch<SetStateAction<any>>;\r\n}\r\n\r\nexport default function Search({ title, endpoint, setResult }: SearchProps) {\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [searchQuery, setSearchQuery] = useState<string>('');\r\n\r\n  const searchSubmit = useCallback(\r\n    async (e: FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n\r\n      setIsLoading(true);\r\n\r\n      const response = await search({\r\n        endpoint,\r\n        params: {\r\n          name: searchQuery,\r\n          email: searchQuery,\r\n          cpf: searchQuery,\r\n          register: searchQuery,\r\n        },\r\n      });\r\n\r\n      if (response.data.length) {\r\n        setIsLoading(false);\r\n\r\n        setResult(\r\n          response.data.map((result: any) =>\r\n            result.hasOwnProperty('profession')\r\n              ? {\r\n                  ...result,\r\n                  profession_name: result.profession.name,\r\n                }\r\n              : result\r\n          )\r\n        );\r\n      } else {\r\n        setIsLoading(false);\r\n        Swal.fire({\r\n          title: 'Ops!',\r\n          text: 'Nenhum resultado encontrado.',\r\n          icon: 'error',\r\n          confirmButtonText: 'Fechar',\r\n          confirmButtonColor: '#ff312e',\r\n        });\r\n      }\r\n    },\r\n    [endpoint, searchQuery, setResult]\r\n  );\r\n\r\n  return (\r\n    <SearchField onSubmit={searchSubmit}>\r\n      <label htmlFor=\"header-search\">{title}</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"header-search\"\r\n        placeholder=\"Digite aqui...\"\r\n        name=\"search\"\r\n        onChange={e => setSearchQuery(e.target.value)}\r\n      />\r\n      <button type=\"submit\">\r\n        {isLoading ? 'Pesquisando...' : 'Pesquisar'}\r\n      </button>\r\n    </SearchField>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const ClientsContainer = styled.div`\r\n  main {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 100px;\r\n\r\n    .register-button {\r\n      margin: 1rem;\r\n      padding: 1rem;\r\n      width: 30vw;\r\n\r\n      background-color: var(--main-color);\r\n      border-radius: 8px;\r\n      border: 0;\r\n      box-shadow: 5px 6px 5px 0px rgba(0, 0, 0, 0.49);\r\n\r\n      color: var(--background-color);\r\n      font-size: 1.2rem;\r\n      font-weight: bold;\r\n      letter-spacing: 1px;\r\n\r\n      &:hover {\r\n        filter: brightness(1.2);\r\n      }\r\n\r\n      @media (max-width: 720px) {\r\n        width: fit-content;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\n\r\nimport ClientsModal from '../../../components/ClientsModal';\r\nimport Sidebar from '../../../components/Sidebar';\r\nimport ClientsTable from '../../../components/Table/Clients';\r\nimport Search from '../../../components/Search';\r\n\r\nimport { ClientsContainer } from './styles';\r\n\r\nimport { Client } from '../../../types';\r\n\r\nconst Clients: React.FC = () => {\r\n  const [currentClient, setCurrentClient] = useState<Client>({} as Client);\r\n  const [modalIsOpen, setModalIsOpen] = useState<boolean>(false);\r\n  const [clients, setClients] = useState<Client[]>([{} as Client]);\r\n\r\n  const handleModalOpen = () => {\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ClientsContainer>\r\n        <Sidebar title=\"Clientes\" />\r\n        <main>\r\n          <button\r\n            className=\"register-button\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              handleModalOpen();\r\n              setCurrentClient({} as Client);\r\n              setCurrentClient({ ...currentClient, new: true });\r\n            }}\r\n          >\r\n            Cadastrar cliente\r\n          </button>\r\n        </main>\r\n        <Search\r\n          title=\"Pesquisar Clientes:\"\r\n          endpoint=\"clients\"\r\n          setResult={setClients}\r\n        />\r\n        <ClientsTable\r\n          clients={clients}\r\n          setClients={setClients}\r\n          handleModalOpen={handleModalOpen}\r\n          setCurrentClient={setCurrentClient}\r\n        />\r\n      </ClientsContainer>\r\n      <ClientsModal\r\n        state={modalIsOpen}\r\n        setState={setModalIsOpen}\r\n        clients={clients}\r\n        setClients={setClients}\r\n        currentClient={currentClient}\r\n        setCurrentClient={setCurrentClient}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Clients;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SpecialistsContainer = styled.div`\r\n  main {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-grow: 2;\r\n    flex-wrap: wrap;\r\n    gap: 2rem;\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    margin-top: 100px;\r\n\r\n    width: 70vw;;\r\n\r\n    .register-button {\r\n      background-color: var(--main-button-color);\r\n      border-radius: 8px;\r\n      border: 0;\r\n      box-shadow: 5px 6px 5px 0px rgba(0, 0, 0, 0.49);\r\n      padding: 1rem;\r\n\r\n      color: var(--main-color);\r\n      font-size: 1.2rem;\r\n      font-weight: bold;\r\n      letter-spacing: 1px;\r\n\r\n      flex: 1;\r\n      margin-left: 2rem;\r\n\r\n      &:hover {\r\n        filter: brightness(1.2);\r\n      }\r\n    }\r\n    .special-button {\r\n      background-color: var(--main-color);\r\n      border-radius: 8px;\r\n      border: 0;\r\n      box-shadow: 5px 6px 5px 0px rgba(0, 0, 0, 0.49);\r\n      padding: 1rem;\r\n\r\n      color: var(--background-color);\r\n      font-size: 1.2rem;\r\n      font-weight: bold;\r\n      letter-spacing: 1px;\r\n\r\n      flex: 1;\r\n      margin-right: 2rem;\r\n\r\n      &:hover {\r\n        filter: brightness(1.2);\r\n      }\r\n    }\r\n\r\n    @media (max-width: 720px) {\r\n      .special-button {\r\n        margin: 0 auto;\r\n      }\r\n\r\n      .register-button {\r\n        margin: 0 auto;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import {\r\n  Dispatch,\r\n  FormEvent,\r\n  SetStateAction,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport InputMask from 'react-input-mask';\r\nimport Swal from 'sweetalert2';\r\nimport { ModalContainer } from '../../assets/ModalStyles';\r\nimport { api } from '../../services/api';\r\nimport { logout } from '../../services/logout';\r\nimport { Address, Specialist, Profession, SelectOption } from '../../types';\r\nimport AddressForm from '../AddressForm';\r\nimport Creatable from 'react-select/creatable';\r\n\r\ninterface SpecialistModalProps {\r\n  state: boolean;\r\n  setState: Dispatch<SetStateAction<boolean>>;\r\n  specialists: Specialist[];\r\n  setSpecialists: Dispatch<SetStateAction<Specialist[]>>;\r\n  currentSpecialist: Specialist;\r\n  setCurrentSpecialist: Dispatch<SetStateAction<Specialist>>;\r\n}\r\n\r\nconst SpecialistsModal = ({\r\n  state,\r\n  setState,\r\n  specialists,\r\n  setSpecialists,\r\n  currentSpecialist,\r\n  setCurrentSpecialist,\r\n}: SpecialistModalProps) => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [professions, setProfessions] = useState<SelectOption[]>([\r\n    {} as SelectOption,\r\n  ]);\r\n\r\n  const handleModalClose = () => {\r\n    setState(false);\r\n  };\r\n\r\n  const setAddress = (address: Address) => {\r\n    setCurrentSpecialist({ ...currentSpecialist, address });\r\n  };\r\n\r\n  const specialistSubmit = useCallback(\r\n    (e: FormEvent<HTMLFormElement>) => {\r\n      const form = e.currentTarget;\r\n\r\n      e.preventDefault();\r\n\r\n      if (form.checkValidity()) {\r\n        setIsLoading(true);\r\n\r\n        api\r\n          .post('specialists', currentSpecialist, {\r\n            headers: {\r\n              authorization: `Bearer ${localStorage.getItem('@tokenVitality')}`,\r\n            },\r\n          })\r\n          .then(response => {\r\n            setSpecialists([currentSpecialist, ...specialists]);\r\n            Swal.fire({\r\n              title: 'Sucesso!',\r\n              text: 'Especialista cadastrado com sucesso.',\r\n              icon: 'success',\r\n              confirmButtonText: 'Fechar',\r\n              confirmButtonColor: '#004AAD',\r\n            }).then(() => handleModalClose);\r\n          })\r\n          .catch(err => {\r\n            let errorMessage = '';\r\n\r\n            if (err.response.data.message === 'Invalid JWT token') {\r\n              logout();\r\n            } else if (\r\n              err.response.data.message ===\r\n              'Specialist already booked with this register'\r\n            ) {\r\n              errorMessage = 'Registro já cadastrado.';\r\n            } else {\r\n              errorMessage = 'Dados incorretos.';\r\n            }\r\n\r\n            Swal.fire({\r\n              title: 'Ops!',\r\n              text: errorMessage,\r\n              icon: 'error',\r\n              confirmButtonText: 'Fechar',\r\n              confirmButtonColor: '#ff312e',\r\n            });\r\n          })\r\n          .finally(() => setIsLoading(false));\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Ops!',\r\n          text: 'Verifique se todos os campos estão preenchidos corretamente.',\r\n          icon: 'error',\r\n          confirmButtonText: 'Fechar',\r\n          confirmButtonColor: '#ff312e',\r\n        });\r\n      }\r\n    },\r\n    [currentSpecialist, specialists, setSpecialists]\r\n  );\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get('professions', {\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem('@tokenVitality')}`,\r\n        },\r\n      })\r\n      .then(response => {\r\n        setProfessions(\r\n          response.data.map((profession: Profession) => {\r\n            return { value: profession.name, label: profession.name };\r\n          })\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <ModalContainer className={state ? 'show' : ''}>\r\n      <form className=\"modal-content\" onSubmit={specialistSubmit} noValidate>\r\n        <div className=\"modal-header\">\r\n          <h4>Cadastro de Especialista</h4>\r\n          <span className=\"close\" onClick={handleModalClose}>\r\n            &times;\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"modal-body\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Nome:</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                disabled={isLoading}\r\n                value={currentSpecialist.name || ''}\r\n                required\r\n                onChange={e =>\r\n                  setCurrentSpecialist({\r\n                    ...currentSpecialist,\r\n                    name: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"register\">Registro:</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"register\"\r\n                  id=\"register\"\r\n                  disabled={isLoading}\r\n                  value={currentSpecialist.register || ''}\r\n                  required\r\n                  onChange={e =>\r\n                    setCurrentSpecialist({\r\n                      ...currentSpecialist,\r\n                      register: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"phone\">Telefone:</label>\r\n                <InputMask\r\n                  mask=\"(99) 9999-9999\"\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  id=\"phone\"\r\n                  disabled={isLoading}\r\n                  value={currentSpecialist.phone || ''}\r\n                  pattern=\"^\\([0-9]{2}\\) [0-9]{4}-[0-9]{4}$\"\r\n                  required\r\n                  onChange={e =>\r\n                    setCurrentSpecialist({\r\n                      ...currentSpecialist,\r\n                      phone: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"cellphone\">Celular:</label>\r\n                <InputMask\r\n                  mask=\"(99) 99999-9999\"\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"cellphone\"\r\n                  id=\"cellphone\"\r\n                  disabled={isLoading}\r\n                  value={currentSpecialist.cellphone || ''}\r\n                  pattern=\"^\\([0-9]{2}\\) [0-9]{5}-[0-9]{4}$\"\r\n                  required\r\n                  onChange={e =>\r\n                    setCurrentSpecialist({\r\n                      ...currentSpecialist,\r\n                      cellphone: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-8\">\r\n                <label htmlFor=\"email\">E-mail:</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  disabled={isLoading}\r\n                  value={currentSpecialist.email || ''}\r\n                  required\r\n                  onChange={e =>\r\n                    setCurrentSpecialist({\r\n                      ...currentSpecialist,\r\n                      email: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"specialty\">Especialidade</label>\r\n                <Creatable\r\n                  options={professions}\r\n                  type=\"specialty\"\r\n                  name=\"specialty\"\r\n                  id=\"specialty\"\r\n                  disabled={isLoading}\r\n                  value={\r\n                    {\r\n                      value: currentSpecialist.profession_name,\r\n                      label: currentSpecialist.profession_name,\r\n                    } || ''\r\n                  }\r\n                  required\r\n                  onChange={(e: any) => {\r\n                    setCurrentSpecialist({\r\n                      ...currentSpecialist,\r\n                      profession_name: e?.value || '',\r\n                    });\r\n                  }}\r\n                  formatCreateLabel={(label: string) => `Criar ${label}`}\r\n                  styles={{\r\n                    option: (styles, { isSelected }) => ({\r\n                      ...styles,\r\n                      color: isSelected ? '#fff' : '#495057',\r\n                    }),\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <AddressForm\r\n              address={currentSpecialist.address}\r\n              setAddress={setAddress}\r\n              isLoading={isLoading}\r\n            />\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"modal-footer\">\r\n          <button type=\"submit\">\r\n            {isLoading ? 'Salvando...' : 'Salvar novo Especialista'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </ModalContainer>\r\n  );\r\n};\r\n\r\nexport default SpecialistsModal;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ProfessionsModalContainer = styled.div`\r\n  display: none;\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 0;\r\n  top: 0;\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background-color: var(--main-text-color);\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n\r\n  &.show {\r\n    display: block;\r\n  }\r\n\r\n  button {\r\n    background-color: var(--main-button-color);\r\n    border: 0;\r\n    border-radius: 8px;\r\n    color: var(--main-color);\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    letter-spacing: 1px;\r\n    width: 100%;\r\n    padding: 10px;\r\n\r\n    transition: 0.2s ease-in-out;\r\n\r\n    &:hover {\r\n      box-shadow: 5px 6px 5px 0px rgba(0, 0, 0, 0.49);\r\n    }\r\n  }\r\n\r\n  .modal-content {\r\n    background-color: var(--background-color);\r\n    color: var(--main-color);\r\n    margin: 15% auto;\r\n    padding: 20px;\r\n    border: 0;\r\n    box-shadow: 5px 6px 5px 0px rgba(0, 0, 0, 0.49);\r\n    width: 50%;\r\n\r\n    .modal-header {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n\r\n      border-bottom: 1px solid var(--main-button-color);\r\n\r\n      h4 {\r\n        font-weight: 700;\r\n        letter-spacing: 1px;\r\n      }\r\n\r\n      .close {\r\n        color: var(--main-text-color);\r\n        float: right;\r\n        font-size: 3rem;\r\n        font-weight: bold;\r\n\r\n        &:hover,\r\n        &:focus {\r\n          color: black;\r\n          text-decoration: none;\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n\r\n    label {\r\n      font-weight: 600;\r\n      letter-spacing: 0.5px;\r\n    }\r\n    input {\r\n      background-color: #d3d3d3;\r\n    }\r\n  }\r\n`;\r\n","import {\r\n  Dispatch,\r\n  FormEvent,\r\n  SetStateAction,\r\n  useCallback,\r\n  useState,\r\n} from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { ProfessionsModalContainer } from \"./styles\";\r\nimport { api } from \"../../services/api\";\r\nimport { logout } from \"../../services/logout\";\r\nimport { Profession } from \"../../types\";\r\n\r\ninterface ProfessionModalProps {\r\n  state: boolean;\r\n  setState: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst ProfessionsModal = ({ state, setState }: ProfessionModalProps) => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [profession, setProfession] = useState<Profession>({} as Profession);\r\n\r\n  const handleModalClose = () => {\r\n    setState(false);\r\n  };\r\n\r\n  const professionSubmit = useCallback(\r\n    (e: FormEvent<HTMLFormElement>) => {\r\n      const form = e.currentTarget;\r\n\r\n      e.preventDefault();\r\n\r\n      if (form.checkValidity()) {\r\n        setIsLoading(true);\r\n\r\n        api\r\n          .post(\"professions\", profession, {\r\n            headers: {\r\n              authorization: `Bearer ${localStorage.getItem(\"@tokenVitality\")}`,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            Swal.fire({\r\n              title: \"Sucesso!\",\r\n              text: \"Especialidade cadastrada com sucesso.\",\r\n              icon: \"success\",\r\n              confirmButtonText: \"Fechar\",\r\n              confirmButtonColor: \"#004AAD\",\r\n            }).then(() => {\r\n              handleModalClose();\r\n              form.reset();\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            let errorMessage = \"\";\r\n\r\n            if (err.response.data.message === \"Invalid JWT token\") {\r\n              logout();\r\n            } else if (\r\n              err.response.data.message ===\r\n              \"Profession already booked with this name\"\r\n            ) {\r\n              errorMessage = \"Especialidade já cadastrada.\";\r\n            } else {\r\n              errorMessage = \"Dados incorretos.\";\r\n            }\r\n\r\n            Swal.fire({\r\n              title: \"Ops!\",\r\n              text: errorMessage,\r\n              icon: \"error\",\r\n              confirmButtonText: \"Fechar\",\r\n              confirmButtonColor: \"#ff312e\",\r\n            });\r\n          })\r\n          .finally(() => {\r\n            setIsLoading(false);\r\n          });\r\n      } else {\r\n        Swal.fire({\r\n          title: \"Ops!\",\r\n          text: \"Verifique se todos os campos estão preenchidos corretamente.\",\r\n          icon: \"error\",\r\n          confirmButtonText: \"Fechar\",\r\n          confirmButtonColor: \"#ff312e\",\r\n        });\r\n      }\r\n    },\r\n    [profession]\r\n  );\r\n\r\n  return (\r\n    <ProfessionsModalContainer className={state ? \"show\" : \"\"}>\r\n      <form className=\"modal-content\" onSubmit={professionSubmit}>\r\n        <div className=\"modal-header\">\r\n          <h4>Cadastro de Especialidade</h4>\r\n          <span className=\"close\" onClick={handleModalClose}>\r\n            &times;\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"modal-body\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Nome:</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              disabled={isLoading}\r\n              required\r\n              onChange={(e) =>\r\n                setProfession({\r\n                  name: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal-footer\">\r\n          <button type=\"submit\">\r\n            {isLoading ? \"Salvando...\" : \"Salvar nova Especialidade\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </ProfessionsModalContainer>\r\n  );\r\n};\r\n\r\nexport default ProfessionsModal;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TableContainer = styled.div`\r\n  margin: 0 auto;\r\n  margin-top: 50px;\r\n  height: 50vh;\r\n  width: 90%;\r\n\r\n  border-radius: 8px;\r\n  overflow: auto;\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 10px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-track {\r\n    background: #f1f1f1;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #888;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #555;\r\n  }\r\n\r\n  table {\r\n    height: auto;\r\n    margin: 0 auto;\r\n\r\n    thead {\r\n      background-color: var(--main-color);\r\n      border-radius: 8px;\r\n      color: var(--background-color);\r\n      letter-spacing: 1px;\r\n    }\r\n\r\n    tbody tr {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react';\r\nimport { Spinner, Table } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\nimport { api } from '../../../services/api';\r\nimport { logout } from '../../../services/logout';\r\nimport { Specialist } from '../../../types';\r\nimport { TableContainer } from './styles';\r\n\r\ninterface SpecialistsTableProps {\r\n  specialists: Specialist[];\r\n  setSpecialists: Dispatch<SetStateAction<Specialist[]>>;\r\n  handleModalOpen: () => void;\r\n  setCurrentSpecialist: Dispatch<SetStateAction<Specialist>>;\r\n}\r\n\r\nconst SpecialistsTable = ({\r\n  specialists,\r\n  setSpecialists,\r\n  handleModalOpen,\r\n  setCurrentSpecialist,\r\n}: SpecialistsTableProps) => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get('specialists', {\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem('@tokenVitality')}`,\r\n        },\r\n      })\r\n      .then(response => {\r\n        setSpecialists(\r\n          response.data.map((specialist: any) => {\r\n            return {\r\n              ...specialist,\r\n              profession_name: specialist.profession.name,\r\n            };\r\n          })\r\n        );\r\n      })\r\n      .catch(err => {\r\n        if (err.response.data.message === 'Invalid JWT token') {\r\n          logout();\r\n        } else {\r\n          Swal.fire({\r\n            title: 'Ops!',\r\n            text: 'Houve um erro ao carregar seus dados.',\r\n            icon: 'error',\r\n            confirmButtonText: 'Atualizar',\r\n            confirmButtonColor: '#ff312e',\r\n          }).then(response => window.location.reload());\r\n        }\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  }, [setSpecialists]);\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table striped bordered hover responsive=\"lg\">\r\n        <thead>\r\n          <tr>\r\n            <th>Especialista</th>\r\n            <th>Especialidade</th>\r\n            <th>Registro</th>\r\n            <th>E-mail</th>\r\n            <th>Celular</th>\r\n            <th>Telefone</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {isLoading\r\n            ? <div>Carregando...<Spinner animation=\"border\" /></div>\r\n            : !Object.keys(specialists[0]).length\r\n            ? 'Nenhum especialista cadastrado.'\r\n            : specialists.map((specialist, index) => (\r\n                <tr\r\n                  key={index}\r\n                  onClick={() => {\r\n                    handleModalOpen();\r\n                    setCurrentSpecialist(specialist);\r\n                  }}\r\n                >\r\n                  <td>{specialist.name}</td>\r\n                  <td>{specialist.profession_name}</td>\r\n                  <td>{specialist.register}</td>\r\n                  <td>{specialist.email}</td>\r\n                  <td>{specialist.cellphone}</td>\r\n                  <td>{specialist.phone}</td>\r\n                </tr>\r\n              ))}\r\n        </tbody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default SpecialistsTable;\r\n","import { useState } from 'react';\r\n\r\nimport Sidebar from '../../../components/Sidebar';\r\nimport { SpecialistsContainer } from './styles';\r\nimport SpecialistsModal from '../../../components/SpecialistsModal';\r\nimport ProfessionsModal from '../../../components/ProfessionsModal';\r\nimport SpecialistsTable from '../../../components/Table/Specialists';\r\nimport Search from '../../../components/Search';\r\nimport { Specialist } from '../../../types';\r\n\r\nconst Specialists: React.FC = () => {\r\n  const [currentSpecialist, setCurrentSpecialist] = useState<Specialist>(\r\n    {} as Specialist\r\n  );\r\n  const [specialists, setSpecialists] = useState<Specialist[]>([\r\n    {} as Specialist,\r\n  ]);\r\n  const [specialistModalIsOpen, setSpecialistModalIsOpen] =\r\n    useState<boolean>(false);\r\n\r\n  const [professionModalIsOpen, setProfessionModalIsOpen] =\r\n    useState<boolean>(false);\r\n\r\n  const handleSpecialistModalOpen = () => {\r\n    setSpecialistModalIsOpen(true);\r\n  };\r\n\r\n  const handleProfessionModalOpen = () => {\r\n    setProfessionModalIsOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SpecialistsContainer>\r\n        <Sidebar title=\"Especialistas\" />\r\n        <main>\r\n          <button\r\n            className=\"register-button\"\r\n            type=\"button\"\r\n            onClick={() => {\r\n              handleSpecialistModalOpen();\r\n              setCurrentSpecialist({} as Specialist);\r\n            }}\r\n          >\r\n            Cadastrar Especialista\r\n          </button>\r\n          <button\r\n            className=\"special-button\"\r\n            type=\"button\"\r\n            onClick={handleProfessionModalOpen}\r\n          >\r\n            Cadastrar Especialidade\r\n          </button>\r\n        </main>\r\n        <Search\r\n          title=\"Pesquisar especialistas:\"\r\n          endpoint=\"specialists\"\r\n          setResult={setSpecialists}\r\n        />\r\n        <SpecialistsTable\r\n          specialists={specialists}\r\n          setSpecialists={setSpecialists}\r\n          handleModalOpen={handleSpecialistModalOpen}\r\n          setCurrentSpecialist={setCurrentSpecialist}\r\n        />\r\n      </SpecialistsContainer>\r\n      <SpecialistsModal\r\n        state={specialistModalIsOpen}\r\n        setState={setSpecialistModalIsOpen}\r\n        specialists={specialists}\r\n        setSpecialists={setSpecialists}\r\n        currentSpecialist={currentSpecialist}\r\n        setCurrentSpecialist={setCurrentSpecialist}\r\n      />\r\n      <ProfessionsModal\r\n        state={professionModalIsOpen}\r\n        setState={setProfessionModalIsOpen}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Specialists;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ChartContainer = styled.main`\r\n  margin-top: 20px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n\r\n  height: calc(100vh - 190px);\r\n  overflow: auto;\r\n\r\n  .chart-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    width: 50vw;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin: 0 auto;\r\n    margin-top: 1.5rem;\r\n    padding: 1rem;\r\n\r\n    border: 1px solid var(--main-text-color);\r\n    border-radius: 8px;\r\n\r\n    .chart-content {\r\n      flex: 2;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      gap: 1rem;\r\n      padding: 10px;\r\n      width: 100%;\r\n\r\n      h1 {\r\n        font-size: 2rem;\r\n      }\r\n\r\n      h2 {\r\n        font-size: 1rem;\r\n      }\r\n      @media (max-width: 720px) {\r\n        h1 {\r\n          width: 50vw;\r\n          white-space: nowrap;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n        }\r\n      }\r\n    }\r\n\r\n    .chart-buttons {\r\n      flex: 1;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 1rem;\r\n      justify-content: center;\r\n      width: 100%;\r\n      button {\r\n        border: 0;\r\n        border-radius: 8px;\r\n        background-color: var(--main-button-color);\r\n        color: var(--main-color);\r\n        font-weight: bold;\r\n        letter-spacing: 1px;\r\n\r\n        padding: 1rem;\r\n      }\r\n\r\n      @media (max-width: 720px) {\r\n        justify-content: space-evenly;\r\n        gap: 1rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ChartModalContainer = styled.main`\r\n  display: none;\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 0;\r\n  top: 0;\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background-color: var(--background-color);\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n\r\n  &.show {\r\n    display: block;\r\n  }\r\n\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: var(--background-color);\r\n    margin: 0 auto;\r\n    margin-top: 100px;\r\n    width: 80vw;\r\n\r\n    label {\r\n      color: var(--main-color);\r\n      font-size: 1rem;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .chart-header {\r\n      flex: 1;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-between;\r\n      padding: 1rem;\r\n\r\n      border-bottom: 1px solid var(--main-color);\r\n      margin-bottom: 1rem;\r\n\r\n      h1 {\r\n        color: var(--main-color);\r\n        font-weight: bold;\r\n      }\r\n\r\n      .close {\r\n        color: var(--main-text-color);\r\n        font-size: 3rem;\r\n        font-weight: bold;\r\n\r\n        &:hover,\r\n        &:focus {\r\n          color: black;\r\n          text-decoration: none;\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .pacients-data {\r\n    margin: 1rem;\r\n    padding: 1rem;\r\n    border-radius: 8px;\r\n\r\n    background-color: var(--main-color);\r\n  }\r\n\r\n  .appointments-container {\r\n    margin-top: 1rem;\r\n    padding: 1rem;\r\n    border-top: 1px solid var(--main-color);\r\n\r\n    h3 {\r\n      font-weight: bold;\r\n      color: var(--main-color);\r\n      padding: 1rem;\r\n    }\r\n\r\n    button {\r\n      color: var(--background-color);\r\n      font-size: 1.2rem;\r\n      font-weight: 500;\r\n      letter-spacing: 1px;\r\n\r\n      width: 100%;\r\n    }\r\n\r\n    .card-body {\r\n      h4 {\r\n        font-weight: 600;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import {\r\n  Dispatch,\r\n  SetStateAction,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport {\r\n  Accordion,\r\n  Card,\r\n  Container,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  FormLabel,\r\n  Spinner\r\n} from 'react-bootstrap';\r\n\r\nimport { CgMoreO } from 'react-icons/cg';\r\nimport { Client, Record } from '../../types';\r\nimport { api } from '../../services/api';\r\nimport { ChartModalContainer } from './styles';\r\nimport { logout } from '../../services/logout';\r\nimport Swal from 'sweetalert2';\r\n\r\ninterface ChartsModalProps {\r\n  state: boolean;\r\n  setState: Dispatch<SetStateAction<boolean>>;\r\n  currentClient: Client;\r\n}\r\n\r\ninterface RecordHistoric {\r\n  dateFromLasterMedicalCare: string;\r\n  medicalRecordHistoric: Record[];\r\n}\r\n\r\nconst ChartModal = ({ state, setState, currentClient }: ChartsModalProps) => {\r\n  const [currentRecordHistoric, setCurrentRecordHistoric] =\r\n    useState<RecordHistoric>({} as RecordHistoric);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n  const handleModalClose = () => {\r\n    setState(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentClient.id) {\r\n      setIsLoading(true);\r\n      api\r\n        .get(`medical-records?client_id=${currentClient.id}`, {\r\n          headers: {\r\n            authorization: `Bearer ${localStorage.getItem('@tokenVitality')}`,\r\n          },\r\n        })\r\n        .then(response => setCurrentRecordHistoric(response.data))\r\n        .catch(err => {\r\n          if (err.response.data.message === 'Invalid JWT token') {\r\n            logout();\r\n          } else {\r\n            Swal.fire({\r\n              title: 'Ops!',\r\n              text: 'Houve um erro ao carregar seus dados.',\r\n              icon: 'error',\r\n              confirmButtonText: 'Atualizar',\r\n              confirmButtonColor: '#ff312e',\r\n            }).then(response => window.location.reload());\r\n          }\r\n        })\r\n        .finally(() => setIsLoading(false));\r\n    }\r\n  }, [currentClient]);\r\n\r\n  return (\r\n    <ChartModalContainer className={state ? 'show' : ''}>\r\n      <Form className=\"p-4 rounded\">\r\n        <div className=\"chart-header\">\r\n          <h1>Prontuário</h1>\r\n          <span className=\"close\" onClick={handleModalClose}>\r\n            &times;\r\n          </span>\r\n        </div>\r\n        <Container>\r\n          <fieldset disabled>\r\n            <Row className=\"m-2\">\r\n              <Col className=\"\">\r\n                <FormLabel>Paciente</FormLabel>\r\n                <Form.Control\r\n                  placeholder=\"Nome do paciente\"\r\n                  value={currentClient.name}\r\n                />\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormLabel>Tipo sanguíneo</FormLabel>\r\n                <Form.Control\r\n                  placeholder=\"tipo sanguíneo\"\r\n                  value={currentClient.blood_type}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"m-2\">\r\n              <Col>\r\n                <FormLabel>Data de abertura</FormLabel>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  value={\r\n                    currentClient.created_at\r\n                      ? currentClient.created_at.split('T')[0]\r\n                      : ''\r\n                  }\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <FormLabel>Último atendimento</FormLabel>\r\n                {isLoading ? (\r\n                  <div><Spinner animation=\"border\" /></div>\r\n                ) : !currentRecordHistoric.medicalRecordHistoric.length ? (\r\n                  <p>Nenhum atendimento cadastrado.</p>\r\n                ) : (\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    value={\r\n                      currentRecordHistoric.dateFromLasterMedicalCare &&\r\n                      new Intl.DateTimeFormat('default', {\r\n                        month: '2-digit',\r\n                        day: '2-digit',\r\n                      }).format(\r\n                        new Date(\r\n                          currentRecordHistoric.dateFromLasterMedicalCare\r\n                        )\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </fieldset>\r\n        </Container>\r\n        <div className=\"appointments-container\">\r\n          <Row className=\"m-2\">\r\n            <Col className=\"col-lg-10 mx-auto\">\r\n              <h3>Atendimentos:</h3>\r\n              <Accordion defaultActiveKey=\"0\">\r\n                <Card>\r\n                  {isLoading ? (\r\n                     <div><Spinner animation=\"border\" /></div>\r\n                  ) : !currentRecordHistoric.medicalRecordHistoric.length ? (\r\n                    <div>Nenhum atendimento cadastrado.</div>\r\n                  ) : (\r\n                    currentRecordHistoric.medicalRecordHistoric.map(record => (\r\n                      <>\r\n                        <Card.Header>\r\n                          <Accordion.Toggle\r\n                            as={Button}\r\n                            variant=\"success\"\r\n                            eventKey=\"1\"\r\n                          >\r\n                            {record.date &&\r\n                              new Intl.DateTimeFormat('pt-BR').format(\r\n                                new Date(record.date)\r\n                              )}\r\n                            <CgMoreO />\r\n                          </Accordion.Toggle>\r\n                        </Card.Header>\r\n                        <Accordion.Collapse eventKey=\"1\">\r\n                          <Card.Body>\r\n                            <h4>Especialista:</h4>\r\n                            <p>{record.specialist && record.specialist.name}</p>\r\n\r\n                            <h4>Hora do atendimento:</h4>\r\n                            <p>\r\n                              {record.date &&\r\n                                new Intl.DateTimeFormat('default', {\r\n                                  hour: 'numeric',\r\n                                  minute: 'numeric',\r\n                                  hour12: false,\r\n                                }).format(new Date(record.date))}\r\n                            </p>\r\n\r\n                            <h4>Descrição:</h4>\r\n                            <p>{record.description}</p>\r\n                          </Card.Body>\r\n                        </Accordion.Collapse>\r\n                      </>\r\n                    ))\r\n                  )}\r\n                </Card>\r\n              </Accordion>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Form>\r\n    </ChartModalContainer>\r\n  );\r\n};\r\n\r\nexport default ChartModal;\r\n","import { ChartContainer } from \"./styles\";\r\nimport ChartModal from \"../ChartModal\";\r\nimport { Dispatch, SetStateAction, useState, useEffect } from \"react\";\r\nimport { api } from \"../../services/api\";\r\nimport { logout } from \"../../services/logout\";\r\nimport { Client } from \"../../types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\ninterface PacientChartProps {\r\n  clients: Client[];\r\n  setClients: Dispatch<SetStateAction<Client[]>>;\r\n}\r\n\r\nconst ClientChart = ({ clients, setClients }: PacientChartProps) => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n  const [currentClient, setCurrentClient] = useState<Client>({} as Client);\r\n\r\n  const [isChartOpen, setIsChartOpen] = useState<boolean>(false);\r\n\r\n  const handleChartOpen = () => {\r\n    setIsChartOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"clients\", {\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem(\"@tokenVitality\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setClients(response.data);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.data.message === \"Invalid JWT token\") {\r\n          logout();\r\n        } else {\r\n          Swal.fire({\r\n            title: \"Ops!\",\r\n            text: \"Houve um erro ao carregar seus dados.\",\r\n            icon: \"error\",\r\n            confirmButtonText: \"Atualizar\",\r\n            confirmButtonColor: \"#ff312e\",\r\n          }).then((response) => window.location.reload());\r\n        }\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  }, [setClients]);\r\n\r\n  return (\r\n    <ChartContainer>\r\n      {isLoading\r\n        ? \"Carregando...\"\r\n        : !Object.keys(clients[0]).length\r\n        ? \"Nenhum cliente cadastrado.\"\r\n        : clients.map((client, index) => (\r\n            <div className=\"chart-container\" key={index}>\r\n              <div className=\"chart-content\">\r\n                <div>\r\n                  <h1>{client.name}</h1>\r\n                  <p>\r\n                    {client.created_at &&\r\n                      new Intl.DateTimeFormat(\"pt-BR\").format(\r\n                        new Date(client.created_at)\r\n                      )}\r\n                  </p>\r\n                  <p>{client.blood_type}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"chart-buttons\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    handleChartOpen();\r\n                    setCurrentClient(client);\r\n                  }}\r\n                >\r\n                  Prontuário\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n      <ChartModal\r\n        state={isChartOpen}\r\n        setState={setIsChartOpen}\r\n        currentClient={currentClient}\r\n      />\r\n    </ChartContainer>\r\n  );\r\n};\r\n\r\nexport default ClientChart;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ChartPageContainer = styled.main`\r\n  margin-top: 100px;\r\n`;\r\n","import Sidebar from \"../../../components/Sidebar\";\r\nimport ClientChart from \"../../../components/ClientChart\";\r\nimport Search from \"../../../components/Search\";\r\nimport { ChartPageContainer } from \"./styles\";\r\n\r\nimport { Client } from \"../../../types\";\r\nimport { useState } from \"react\";\r\n\r\nconst Charts: React.FC = () => {\r\n  const [clients, setClients] = useState<Client[]>([{} as Client]);\r\n\r\n  return (\r\n    <ChartPageContainer>\r\n      <Sidebar title=\"Prontuários\" />\r\n      <Search\r\n        title=\"Pesquisar pacientes\"\r\n        endpoint=\"clients\"\r\n        setResult={setClients}\r\n      />\r\n      <ClientChart clients={clients} setClients={setClients} />\r\n    </ChartPageContainer>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CalendarContainer = styled.main`\r\n  margin: 0 auto;\r\n  margin-top: 2rem;\r\n  width: 80vw;\r\n  height: calc(100vh - 100px);\r\n  overflow: auto;\r\n\r\n  .scheduler-table {\r\n    .dx-scheduler-header-panel-cell {\r\n      background-color: var(--background-color);\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ScheduleContainer = styled.div`\r\n  display: none;\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 0;\r\n  top: 0;\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background-color: var(--background-color);\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n\r\n  .form-group {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: flex-end;\r\n\r\n    .select {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  &.show {\r\n    display: block;\r\n  }\r\n\r\n  button {\r\n    background-color: var(--main-button-color);\r\n    border: 0;\r\n    border-radius: 8px;\r\n    color: var(--main-color);\r\n    font-size: 1.2rem;\r\n    font-weight: bold;\r\n    letter-spacing: 1px;\r\n    padding: 1rem;\r\n\r\n    transition: 0.2s ease-in-out;\r\n\r\n    &:hover {\r\n      box-shadow: 5px 6px 5px 0px rgba(0, 0, 0, 0.49);\r\n    }\r\n  }\r\n\r\n  .modal-content {\r\n    background-color: var(--secondary-bg-color);\r\n    color: var(--main-color);\r\n    margin: 15% auto;\r\n    padding: 1rem;\r\n    border: 0;\r\n    box-shadow: 5px 6px 5px 0px rgba(0, 0, 0, 0.49);\r\n    width: 50vw;\r\n\r\n    label {\r\n      font-weight: 500;\r\n    }\r\n\r\n    .modal-header {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n\r\n      h4 {\r\n        font-weight: 600;\r\n      }\r\n\r\n      .close {\r\n        color: var(--main-text-color);\r\n        float: right;\r\n        font-size: 3rem;\r\n        font-weight: bold;\r\n\r\n        &:hover,\r\n        &:focus {\r\n          color: black;\r\n          text-decoration: none;\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import {\r\n  Dispatch,\r\n  FormEvent,\r\n  SetStateAction,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\n\r\nimport { api } from '../../services/api';\r\nimport { logout } from '../../services/logout';\r\n\r\nimport Select from 'react-select';\r\nimport Swal from 'sweetalert2';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport { ScheduleContainer } from './styles';\r\nimport { Appointment, SelectOption } from '../../types';\r\n\r\ninterface ScheduleModalProps {\r\n  state: boolean;\r\n  setState: Dispatch<SetStateAction<boolean>>;\r\n  currentAppointment: Appointment;\r\n  setCurrentAppointment: Dispatch<SetStateAction<Appointment>>;\r\n  getAppointments: () => void;\r\n  clients: SelectOption[];\r\n  specialists: SelectOption[];\r\n}\r\n\r\nconst ScheduleModal = ({\r\n  state,\r\n  setState,\r\n  currentAppointment,\r\n  setCurrentAppointment,\r\n  getAppointments,\r\n  clients,\r\n  specialists,\r\n}: ScheduleModalProps) => {\r\n  const [isLoadingAppointment, setIsLoadingAppointment] =\r\n    useState<boolean>(false);\r\n\r\n  const [needDescription, setNeedDescription] = useState<boolean>(false);\r\n\r\n  const handleModalClose = () => {\r\n    setState(false);\r\n  };\r\n\r\n  const appointmentSubmit = useCallback(\r\n    (e: FormEvent<HTMLFormElement>) => {\r\n      const form = e.currentTarget;\r\n\r\n      const appointment: Appointment = {\r\n        date: currentAppointment.date,\r\n        amount: currentAppointment.amount,\r\n        status: currentAppointment.status,\r\n        client_id: currentAppointment.client_id,\r\n        specialist_id: currentAppointment.specialist_id,\r\n        description: currentAppointment.description || '',\r\n      };\r\n      console.log(appointment);\r\n\r\n      e.preventDefault();\r\n\r\n      if (form.checkValidity()) {\r\n        setIsLoadingAppointment(true);\r\n\r\n        if (currentAppointment.new) {\r\n          api\r\n            .post('medical-cares', appointment, {\r\n              headers: {\r\n                authorization: `Bearer ${localStorage.getItem(\r\n                  '@tokenVitality'\r\n                )}`,\r\n              },\r\n            })\r\n            .then(response => {\r\n              getAppointments();\r\n\r\n              Swal.fire({\r\n                title: 'Sucesso!',\r\n                text: 'Atendimento criado com sucesso.',\r\n                icon: 'success',\r\n                confirmButtonText: 'Fechar',\r\n                confirmButtonColor: '#004AAD',\r\n              }).then(() => handleModalClose);\r\n            })\r\n            .catch(err => {\r\n              let errorMessage = '';\r\n\r\n              switch (err.response.data.message) {\r\n                case 'Invalid JWT token':\r\n                  logout();\r\n                  break;\r\n                case \"You can't create an appointment on a past date\":\r\n                  errorMessage =\r\n                    'Não é possível criar atendimentos em datas anteriores.';\r\n                  break;\r\n                case 'This appointment is already booked':\r\n                  errorMessage =\r\n                    'Já existe um atendimento com o especialista escolhido neste horário.';\r\n                  break;\r\n                case 'Specialist not found':\r\n                  errorMessage = 'Especialista não encontrado.';\r\n                  break;\r\n                case 'Client not found':\r\n                  errorMessage = 'Cliente não encontrado.';\r\n                  break;\r\n                default:\r\n                  errorMessage = 'Dados incorretos.';\r\n              }\r\n\r\n              Swal.fire({\r\n                title: 'Ops!',\r\n                text: errorMessage,\r\n                icon: 'error',\r\n                confirmButtonText: 'Fechar',\r\n                confirmButtonColor: '#ff312e',\r\n              });\r\n            })\r\n            .finally(() => setIsLoadingAppointment(false));\r\n        } else {\r\n          appointment.id = currentAppointment.id;\r\n\r\n          api\r\n            .put('medical-cares', appointment, {\r\n              headers: {\r\n                authorization: `Bearer ${localStorage.getItem(\r\n                  '@tokenVitality'\r\n                )}`,\r\n              },\r\n            })\r\n            .then(response => {\r\n              getAppointments();\r\n\r\n              Swal.fire({\r\n                title: 'Sucesso!',\r\n                text: 'Atendimento atualizado com sucesso.',\r\n                icon: 'success',\r\n                confirmButtonText: 'Fechar',\r\n                confirmButtonColor: '#004AAD',\r\n              }).then(() => handleModalClose);\r\n            })\r\n            .catch(err => {\r\n              let errorMessage = '';\r\n\r\n              switch (err.response.data.message) {\r\n                case 'Invalid JWT token':\r\n                  logout();\r\n                  break;\r\n                case \"You can't create an appointment on a past date\":\r\n                  errorMessage =\r\n                    'Não é possível criar atendimentos em datas anteriores.';\r\n                  break;\r\n                case 'This appointment is already booked':\r\n                  errorMessage =\r\n                    'Já existe um atendimento com o especialista escolhido neste horário.';\r\n                  break;\r\n                case \"You can't modify a medical care appointment status where already finished\":\r\n                  errorMessage =\r\n                    'Não é possível alterar atendimentos já realizados.';\r\n                  break;\r\n                case 'Specialist not found':\r\n                  errorMessage = 'Especialista não encontrado.';\r\n                  break;\r\n                case 'Client not found':\r\n                  errorMessage = 'Cliente não encontrado.';\r\n                  break;\r\n                case 'This medical care already canceled':\r\n                  errorMessage = 'Esse atendimento já foi cancelado.';\r\n                  break;\r\n                default:\r\n                  errorMessage = 'Dados incorretos.';\r\n              }\r\n\r\n              Swal.fire({\r\n                title: 'Ops!',\r\n                text: errorMessage,\r\n                icon: 'error',\r\n                confirmButtonText: 'Fechar',\r\n                confirmButtonColor: '#ff312e',\r\n              });\r\n            })\r\n            .finally(() => setIsLoadingAppointment(false));\r\n        }\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Ops!',\r\n          text: 'Verifique se todos os campos estão preenchidos corretamente.',\r\n          icon: 'error',\r\n          confirmButtonText: 'Fechar',\r\n          confirmButtonColor: '#ff312e',\r\n        });\r\n      }\r\n    },\r\n    [currentAppointment]\r\n  );\r\n\r\n  return (\r\n    <ScheduleContainer className={state ? 'show' : ''}>\r\n      <form className=\"modal-content\" onSubmit={appointmentSubmit} noValidate>\r\n        <div className=\"modal-header\">\r\n          <h4>Agendamento</h4>\r\n          <span className=\"close\" onClick={handleModalClose}>\r\n            &times;\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"modal-body\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Paciente:</label>\r\n            <Select\r\n              className=\"select\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              isDisabled={\r\n                isLoadingAppointment ||\r\n                (currentAppointment.status !== 'AGENDADO' && !needDescription)\r\n              }\r\n              options={clients}\r\n              required\r\n              value={{\r\n                value: currentAppointment.client_id || '',\r\n                label: currentAppointment.client_id\r\n                  ? `${currentAppointment.client?.name} - CPF: ${currentAppointment.client?.cpf}`\r\n                  : '',\r\n              }}\r\n              onChange={e =>\r\n                setCurrentAppointment({\r\n                  ...currentAppointment,\r\n                  client_id: e?.value || '',\r\n                  client: {\r\n                    name: e?.label.split(' - ')[0] || '',\r\n                    cpf: e?.label.split(' CPF: ')[1] || '',\r\n                  },\r\n                })\r\n              }\r\n            ></Select>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-sm-4\">\r\n              <label htmlFor=\"date\">Data de atendimento:</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"date\"\r\n                name=\"date\"\r\n                id=\"date\"\r\n                disabled={\r\n                  isLoadingAppointment ||\r\n                  (currentAppointment.status !== 'AGENDADO' && !needDescription)\r\n                }\r\n                required\r\n                value={\r\n                  currentAppointment.date\r\n                    ? currentAppointment.date.split('T')[0]\r\n                    : ''\r\n                }\r\n                onChange={e => {\r\n                  const [year, month, day] = e.target.value.split('-');\r\n\r\n                  setCurrentAppointment({\r\n                    ...currentAppointment,\r\n                    date: new Date(\r\n                      new Date(\r\n                        new Date(\r\n                          new Date(currentAppointment.date).setFullYear(\r\n                            Number(year)\r\n                          )\r\n                        ).setMonth(Number(month) - 1)\r\n                      ).setDate(Number(day))\r\n                    ).toISOString(),\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-sm-4\">\r\n              <label htmlFor=\"time\">Hora de atendimento:</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"time\"\r\n                name=\"time\"\r\n                id=\"time\"\r\n                disabled={\r\n                  isLoadingAppointment ||\r\n                  (currentAppointment.status !== 'AGENDADO' && !needDescription)\r\n                }\r\n                required\r\n                value={\r\n                  currentAppointment.date\r\n                    ? new Intl.DateTimeFormat('default', {\r\n                        hour: '2-digit',\r\n                        minute: '2-digit',\r\n                        hour12: false,\r\n                      }).format(new Date(currentAppointment.date))\r\n                    : ''\r\n                }\r\n                onChange={e => {\r\n                  const [hour, minute] = e.target.value.split(':');\r\n\r\n                  setCurrentAppointment({\r\n                    ...currentAppointment,\r\n                    date: new Date(\r\n                      new Date(\r\n                        new Date(currentAppointment.date).setHours(Number(hour))\r\n                      ).setMinutes(Number(minute))\r\n                    ).toISOString(),\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-group col-sm-4\">\r\n              <label htmlFor=\"amount\">Valor:</label>\r\n              <NumberFormat\r\n                className=\"form-control\"\r\n                name=\"amount\"\r\n                id=\"amount\"\r\n                disabled={\r\n                  isLoadingAppointment ||\r\n                  (currentAppointment.status !== 'AGENDADO' && !needDescription)\r\n                }\r\n                required\r\n                value={currentAppointment.amount || ''}\r\n                thousandSeparator={'.'}\r\n                decimalSeparator={','}\r\n                fixedDecimalScale={true}\r\n                decimalScale={2}\r\n                onChange={e =>\r\n                  setCurrentAppointment({\r\n                    ...currentAppointment,\r\n                    amount: Number(\r\n                      e.target.value.replace('.', '').replace(',', '.')\r\n                    ),\r\n                  })\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-sm-6\">\r\n              <label htmlFor=\"status\">Status:</label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"status\"\r\n                id=\"status\"\r\n                disabled={\r\n                  isLoadingAppointment ||\r\n                  (currentAppointment.status !== 'AGENDADO' && !needDescription)\r\n                }\r\n                required\r\n                value={currentAppointment.status || ''}\r\n                onChange={e => {\r\n                  if (\r\n                    currentAppointment.status === 'AGENDADO' &&\r\n                    e.target.value === 'REALIZADO'\r\n                  )\r\n                    setNeedDescription(true);\r\n                  else setNeedDescription(false);\r\n\r\n                  setCurrentAppointment({\r\n                    ...currentAppointment,\r\n                    status: e.target.value,\r\n                  });\r\n                }}\r\n              >\r\n                <option value=\"AGENDADO\">Agendado</option>\r\n                <option value=\"REALIZADO\">Realizado</option>\r\n                <option value=\"CANCELADO\">Cancelado</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group col-sm-6\">\r\n              <label htmlFor=\"specialists\">Especialista:</label>\r\n              <Select\r\n                className=\"select\"\r\n                name=\"specialists\"\r\n                id=\"specialists\"\r\n                isDisabled={\r\n                  isLoadingAppointment ||\r\n                  (currentAppointment.status !== 'AGENDADO' && !needDescription)\r\n                }\r\n                options={specialists}\r\n                required\r\n                value={{\r\n                  value: currentAppointment.specialist_id || '',\r\n                  label: currentAppointment.specialist_id\r\n                    ? `${currentAppointment.specialist?.name}`\r\n                    : '',\r\n                }}\r\n                onChange={e =>\r\n                  setCurrentAppointment({\r\n                    ...currentAppointment,\r\n                    specialist_id: e?.value || '',\r\n                    specialist: {\r\n                      name: e?.label || '',\r\n                    },\r\n                  })\r\n                }\r\n              ></Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group col-sm-12\">\r\n          <label htmlFor=\"description\">Descrição:</label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            name=\"description\"\r\n            id=\"description\"\r\n            value={currentAppointment.description || ''}\r\n            disabled={isLoadingAppointment || !needDescription}\r\n            required={currentAppointment.status === 'REALIZADO'}\r\n            placeholder={\r\n              currentAppointment.status === 'AGENDADO'\r\n                ? 'Altere o status para realizado para editar a descrição'\r\n                : ''\r\n            }\r\n            onChange={e =>\r\n              setCurrentAppointment({\r\n                ...currentAppointment,\r\n                description: e.target.value,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button type=\"submit\" disabled={isLoadingAppointment}>\r\n            {isLoadingAppointment ? 'Salvando...' : 'Salvar atendimento'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </ScheduleContainer>\r\n  );\r\n};\r\n\r\nexport default ScheduleModal;\r\n","import Scheduler, { Resource } from 'devextreme-react/scheduler';\r\nimport ptMessages from 'devextreme/localization/messages/pt.json';\r\nimport { locale, loadMessages } from 'devextreme/localization';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { api } from '../../services/api';\r\nimport { logout } from '../../services/logout';\r\nimport { Appointment, SelectOption } from '../../types';\r\n\r\nimport { CalendarContainer } from './styles';\r\nimport { Dispatch, SetStateAction, useEffect, useState } from 'react';\r\n\r\nimport ScheduleModal from '../ScheduleModal';\r\n\r\ninterface CalendarAppointment extends Appointment {\r\n  text: string;\r\n  startDate: Date;\r\n}\r\n\r\ninterface StatusColors {\r\n  id: string;\r\n  color: string;\r\n}\r\n\r\ninterface CalendarProps {\r\n  clients: SelectOption[];\r\n  specialists: SelectOption[];\r\n  handleModalOpen: () => void;\r\n  setIsModalOpen: Dispatch<SetStateAction<boolean>>;\r\n  isModalOpen: boolean;\r\n  setCurrentAppointment: Dispatch<SetStateAction<Appointment>>;\r\n  currentAppointment: Appointment;\r\n}\r\n\r\nconst Calendar = ({\r\n  clients,\r\n  specialists,\r\n  handleModalOpen,\r\n  setIsModalOpen,\r\n  isModalOpen,\r\n  setCurrentAppointment,\r\n  currentAppointment,\r\n}: CalendarProps) => {\r\n  const [appointments, setAppointments] = useState<CalendarAppointment[]>([\r\n    {} as CalendarAppointment,\r\n  ]);\r\n\r\n  const [statusColors] = useState<StatusColors[]>([\r\n    { id: 'AGENDADO', color: 'var(--main-color)' },\r\n    { id: 'REALIZADO', color: 'var(--secondary-color)' },\r\n    { id: 'CANCELADO', color: 'var(--danger-color)' },\r\n  ]);\r\n\r\n  const getAppointments = () => {\r\n    api\r\n      .get('medical-cares', {\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem('@tokenVitality')}`,\r\n        },\r\n      })\r\n      .then(response =>\r\n        setAppointments(\r\n          response.data.map((appointment: Appointment) => {\r\n            return {\r\n              ...appointment,\r\n              startDate: new Date(appointment.date),\r\n              text: `${appointment.client?.name} - CPF: ${appointment.client?.cpf}`,\r\n            };\r\n          })\r\n        )\r\n      )\r\n      .catch(err => {\r\n        if (err.response.data.message === 'Invalid JWT token') {\r\n          logout();\r\n        } else {\r\n          Swal.fire({\r\n            title: 'Ops!',\r\n            text: 'Houve um erro ao carregar seus dados.',\r\n            icon: 'error',\r\n            confirmButtonText: 'Atualizar',\r\n            confirmButtonColor: '#ff312e',\r\n          }).then(response => window.location.reload());\r\n        }\r\n      });\r\n  };\r\n\r\n  loadMessages(ptMessages);\r\n  locale(navigator.language);\r\n\r\n  useEffect(() => {\r\n    getAppointments();\r\n  }, []);\r\n\r\n  return (\r\n    <CalendarContainer>\r\n      <Scheduler\r\n        className=\"scheduler-table\"\r\n        defaultCurrentView=\"day\"\r\n        dataSource={appointments}\r\n        defaultCurrentDate={new Date()}\r\n        startDayHour={8}\r\n        endDayHour={19}\r\n        onCellClick={e => {\r\n          setCurrentAppointment({\r\n            new: true,\r\n            status: 'AGENDADO',\r\n            date: e.cellData.startDate.toISOString(),\r\n          } as Appointment);\r\n          handleModalOpen();\r\n        }}\r\n        onAppointmentClick={e => {\r\n          e.cancel = true;\r\n          setCurrentAppointment({ ...e.appointmentData, new: false });\r\n          handleModalOpen();\r\n        }}\r\n      >\r\n        <Resource fieldExpr=\"status\" dataSource={statusColors} />\r\n      </Scheduler>\r\n      <ScheduleModal\r\n        setState={setIsModalOpen}\r\n        state={isModalOpen}\r\n        currentAppointment={currentAppointment}\r\n        setCurrentAppointment={setCurrentAppointment}\r\n        getAppointments={getAppointments}\r\n        clients={clients}\r\n        specialists={specialists}\r\n      />\r\n    </CalendarContainer>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ResultsTable = styled.table`\r\n  margin: 0 auto;\r\n  margin-top: 50px;\r\n  max-height: 50vh;\r\n  overflow: auto;\r\n  width: 70vw;\r\n\r\n  border-radius: 8px;\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 10px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-track {\r\n    background: #f1f1f1;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #888;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #555;\r\n  }\r\n\r\n  table {\r\n    margin: 0 auto;\r\n    height: auto;\r\n\r\n    thead {\r\n      border-radius: 8px;\r\n      background-color: var(--main-color);\r\n      color: var(--background-color);\r\n      letter-spacing: 1px;\r\n    }\r\n\r\n    tbody tr {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n","import { Dispatch, SetStateAction } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { Appointment } from '../../types';\r\nimport { ResultsTable } from './styles';\r\n\r\ninterface AppointmentResultsProps {\r\n  result: Appointment[];\r\n  handleModalOpen: () => void;\r\n  setCurrentAppointment: Dispatch<SetStateAction<Appointment>>;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst AppointmentResults = ({\r\n  result,\r\n  handleModalOpen,\r\n  setCurrentAppointment,\r\n  isLoading,\r\n}: AppointmentResultsProps) => {\r\n  return (\r\n    <ResultsTable>\r\n      <Table striped bordered hover responsive=\"lg\">\r\n        <thead>\r\n          <tr>\r\n            <th>Paciente</th>\r\n            <th>Especialista</th>\r\n            <th>Status</th>\r\n            <th>Data de agendamento</th>\r\n            <th>Data de atendimento</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {isLoading\r\n            ? 'Carregando...'\r\n            : !Object.keys(result[0]).length\r\n            ? 'Nenhum cliente cadastrado.'\r\n            : result.map((appointment, index) => (\r\n                <tr\r\n                  key={index}\r\n                  onClick={() => {\r\n                    handleModalOpen();\r\n                    setCurrentAppointment({ ...appointment, new: false });\r\n                  }}\r\n                >\r\n                  <td>{appointment.client?.name}</td>\r\n                  <td>{appointment.specialist?.name}</td>\r\n                  <td>\r\n                    {appointment.status[0] +\r\n                      appointment.status\r\n                        .substr(1, appointment.status.length)\r\n                        .toLowerCase()}\r\n                  </td>\r\n                  <td>\r\n                    {appointment.appointment_date &&\r\n                      new Intl.DateTimeFormat('pt-BR').format(\r\n                        new Date(appointment.appointment_date)\r\n                      )}\r\n                  </td>\r\n                  <td>\r\n                    {appointment.date &&\r\n                      new Intl.DateTimeFormat('pt-BR').format(\r\n                        new Date(appointment.date)\r\n                      )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n        </tbody>\r\n      </Table>\r\n    </ResultsTable>\r\n  );\r\n};\r\n\r\nexport default AppointmentResults;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchContainer = styled.form`\r\n  background-color: var(--secondary-bg-color);\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  margin: 0 auto;\r\n  margin-top: 100px;\r\n  width: 80vw;\r\n\r\n  button {\r\n    background-color: var(--main-button-color);\r\n    border: 0;\r\n    color: var(--main-color);\r\n    font-weight: 500;\r\n    letter-spacing: 1px;\r\n\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 2rem;\r\n    align-items: center;\r\n\r\n    &:focus {\r\n      background-color: var(--secondary-bg-color);\r\n      color: var(--main-text-color);\r\n    }\r\n\r\n    &:hover {\r\n      background-color: var(--secondary-bg-color);\r\n      color: var(--main-text-color);\r\n    }\r\n\r\n    svg {\r\n      font-size: 1.2rem;\r\n    }\r\n  }\r\n\r\n  label {\r\n    font-weight: 500;\r\n  }\r\n\r\n  .search-btn {\r\n    background-color: var(--main-color);\r\n    color: var(--background-color);\r\n    font-weight: 500;\r\n    letter-spacing: 1px;\r\n    width: 50vw;\r\n    height: 2rem;\r\n    border-radius: 8px;\r\n    transition: ease-in-out 0.3s;\r\n\r\n    &:hover {\r\n      background-color: var(--main-button-color);\r\n      color: var(--main-color);\r\n    }\r\n  }\r\n`;\r\n","import {\r\n  Dispatch,\r\n  FormEvent,\r\n  SetStateAction,\r\n  useCallback,\r\n  useState,\r\n} from 'react';\r\nimport {\r\n  Accordion,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  FormLabel,\r\n  Card,\r\n} from 'react-bootstrap';\r\nimport { BsChevronDoubleDown } from 'react-icons/bs';\r\nimport Select from 'react-select';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport AppointmentResults from '../AppointmentResults';\r\n\r\nimport { SearchContainer } from './styles';\r\nimport { Appointment, SelectOption } from '../../types';\r\nimport { search } from '../../services/search';\r\n\r\ninterface SearchAppointmentProps {\r\n  clients: SelectOption[];\r\n  specialists: SelectOption[];\r\n  handleModalOpen: () => void;\r\n  setCurrentAppointment: Dispatch<SetStateAction<Appointment>>;\r\n}\r\n\r\ninterface SearchParams {\r\n  status: string | null;\r\n  client_id: string | null;\r\n  specialist_id: string | null;\r\n  date: string | null;\r\n  appointment_date: string | null;\r\n}\r\n\r\nconst SearchAppointment = ({\r\n  clients,\r\n  specialists,\r\n  handleModalOpen,\r\n  setCurrentAppointment,\r\n}: SearchAppointmentProps) => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const [searchParams, setSearchParams] = useState<SearchParams>(\r\n    {} as SearchParams\r\n  );\r\n\r\n  const [result, setResult] = useState<Appointment[]>([{} as Appointment]);\r\n\r\n  const searchSubmit = useCallback(\r\n    async (e: FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n\r\n      setIsLoading(true);\r\n\r\n      const response = await search({\r\n        endpoint: 'medical-cares',\r\n        params: searchParams,\r\n      });\r\n\r\n      console.log(response.data)\r\n\r\n      if (response.data.length) {\r\n        setIsLoading(false);\r\n\r\n        setResult(response.data);\r\n      } else {\r\n        setIsLoading(false);\r\n        Swal.fire({\r\n          title: 'Ops!',\r\n          text: 'Nenhum resultado encontrado.',\r\n          icon: 'error',\r\n          confirmButtonText: 'Fechar',\r\n          confirmButtonColor: '#ff312e',\r\n        });\r\n      }\r\n    },\r\n    [setResult, searchParams]\r\n  );\r\n\r\n  return (\r\n    <SearchContainer onSubmit={searchSubmit}>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        <Card>\r\n          <Card.Header>\r\n            <Accordion.Toggle as={Button} eventKey=\"0\">\r\n              Pesquisa <BsChevronDoubleDown />\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body>\r\n              <Row className=\"m-2\">\r\n                <Col md=\"6\">\r\n                  <FormLabel>Paciente</FormLabel>\r\n                  <Select\r\n                    className=\"select\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    options={[\r\n                      ...clients,\r\n                      { value: '', label: 'Nenhum paciente' },\r\n                    ]}\r\n                    required\r\n                    onChange={e =>\r\n                      setSearchParams({\r\n                        ...searchParams,\r\n                        client_id: e?.value || '',\r\n                      })\r\n                    }\r\n                  ></Select>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <FormLabel>Especialista</FormLabel>\r\n                  <Select\r\n                    className=\"select\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    options={[\r\n                      ...specialists,\r\n                      { value: '', label: 'Nenhum especialista' },\r\n                    ]}\r\n                    required\r\n                    onChange={e =>\r\n                      setSearchParams({\r\n                        ...searchParams,\r\n                        specialist_id: e?.value || '',\r\n                      })\r\n                    }\r\n                  ></Select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                <Col md=\"4\">\r\n                  <FormLabel>Status</FormLabel>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    onChange={e =>\r\n                      setSearchParams({\r\n                        ...searchParams,\r\n                        status: e.target.value,\r\n                      })\r\n                    }\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    <option value=\"AGENDADO\">Agendado</option>\r\n                    <option value=\"REALIZADO\">Realizado</option>\r\n                    <option value=\"CANCELADO\">Cancelado</option>\r\n                  </Form.Control>\r\n                </Col>\r\n                <Col>\r\n                  <FormLabel>Data de agendamento</FormLabel>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    onChange={e => {\r\n                      const date =\r\n                        new Date(e.target.value) instanceof Date &&\r\n                        !isNaN(new Date(e.target.value).valueOf())\r\n                          ? new Date(e.target.value).toISOString()\r\n                          : null;\r\n\r\n                      setSearchParams({\r\n                        ...searchParams,\r\n                        appointment_date: date,\r\n                      });\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <FormLabel>Data de Atendimento</FormLabel>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    onChange={e => {\r\n                      const date =\r\n                        new Date(e.target.value) instanceof Date &&\r\n                        !isNaN(new Date(e.target.value).valueOf())\r\n                          ? new Date(e.target.value).toISOString()\r\n                          : null;\r\n\r\n                      setSearchParams({\r\n                        ...searchParams,\r\n                        date,\r\n                      });\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"m-4\">\r\n                <button type=\"submit\" className=\"search-btn mx-auto\">\r\n                  {isLoading ? 'Pesquisando...' : 'Pesquisar'}\r\n                </button>\r\n              </Row>\r\n              <Row>\r\n                <AppointmentResults\r\n                  result={result}\r\n                  handleModalOpen={handleModalOpen}\r\n                  setCurrentAppointment={setCurrentAppointment}\r\n                  isLoading={isLoading}\r\n                />\r\n              </Row>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </SearchContainer>\r\n  );\r\n};\r\n\r\nexport default SearchAppointment;\r\n","import { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport Calendar from '../../../components/Calendar';\r\nimport SearchAppointment from '../../../components/SearchAppointment';\r\n\r\nimport Sidebar from '../../../components/Sidebar';\r\nimport { api } from '../../../services/api';\r\nimport { logout } from '../../../services/logout';\r\nimport { Appointment, SelectOption } from '../../../types';\r\n\r\nconst Appointments: React.FC = () => {\r\n  const [clients, setClients] = useState<SelectOption[]>([{} as SelectOption]);\r\n\r\n  const [specialists, setSpecialists] = useState<SelectOption[]>([\r\n    {} as SelectOption,\r\n  ]);\r\n\r\n  const [currentAppointment, setCurrentAppointment] = useState<Appointment>(\r\n    {} as Appointment\r\n  );\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n\r\n  const handleModalOpen = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const getClients = () => {\r\n    api\r\n      .get('clients', {\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem('@tokenVitality')}`,\r\n        },\r\n      })\r\n      .then(response => {\r\n        setClients(\r\n          response.data.map((client: any) => {\r\n            return {\r\n              value: client.id,\r\n              label: `${client.name} - CPF: ${client.cpf}`,\r\n            };\r\n          })\r\n        );\r\n      })\r\n      .catch(err => {\r\n        if (err.response.data.message === 'Invalid JWT token') {\r\n          logout();\r\n        } else {\r\n          Swal.fire({\r\n            title: 'Ops!',\r\n            text: 'Houve um erro ao carregar seus dados.',\r\n            icon: 'error',\r\n            confirmButtonText: 'Atualizar',\r\n            confirmButtonColor: '#ff312e',\r\n          }).then(response => window.location.reload());\r\n        }\r\n      });\r\n  };\r\n\r\n  const getSpecialists = () => {\r\n    api\r\n      .get('specialists', {\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem('@tokenVitality')}`,\r\n        },\r\n      })\r\n      .then(response => {\r\n        setSpecialists(\r\n          response.data.map((specialist: any) => {\r\n            return {\r\n              value: specialist.id,\r\n              label: `${specialist.name} - ${specialist.profession.name}`,\r\n            };\r\n          })\r\n        );\r\n      })\r\n      .catch(err => {\r\n        if (err.response.data.message === 'Invalid JWT token') {\r\n          logout();\r\n        } else {\r\n          Swal.fire({\r\n            title: 'Ops!',\r\n            text: 'Houve um erro ao carregar seus dados.',\r\n            icon: 'error',\r\n            confirmButtonText: 'Atualizar',\r\n            confirmButtonColor: '#ff312e',\r\n          }).then(response => window.location.reload());\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getClients();\r\n    getSpecialists();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Sidebar title=\"Atendimentos\" />\r\n      <SearchAppointment\r\n        clients={clients}\r\n        specialists={specialists}\r\n        handleModalOpen={handleModalOpen}\r\n        setCurrentAppointment={setCurrentAppointment}\r\n      />\r\n      <Calendar\r\n        clients={clients}\r\n        specialists={specialists}\r\n        handleModalOpen={handleModalOpen}\r\n        setIsModalOpen={setIsModalOpen}\r\n        isModalOpen={isModalOpen}\r\n        setCurrentAppointment={setCurrentAppointment}\r\n        currentAppointment={currentAppointment}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","import { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport isAuthenticated from \"./services/auth\";\r\n\r\nimport Home from \"./views/pages/Home\";\r\nimport Login from \"./views/pages/Login\";\r\nimport Register from \"./views/pages/Register\";\r\n\r\nimport PrivateRoute from \"./private.routes\";\r\n\r\nimport Dashboard from \"./views/pages/Dashboard\";\r\nimport Clients from \"./views/pages/Clients\";\r\nimport Specialists from \"./views/pages/Specialists\";\r\nimport Charts from \"./views/pages/Charts\";\r\nimport Appointments from \"./views/pages/Appointments\";\r\n\r\nconst Routes: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/register\" component={Register} />\r\n        <Route path=\"/login\">\r\n          {isAuthenticated() ? <Redirect to=\"/dashboard\" /> : <Login />}\r\n        </Route>\r\n\r\n        <PrivateRoute path=\"/dashboard\" component={Dashboard} />\r\n        <PrivateRoute path=\"/clients\" component={Clients} />\r\n        <PrivateRoute path=\"/specialists\" component={Specialists} />\r\n        <PrivateRoute path=\"/charts\" component={Charts} />\r\n        <PrivateRoute path=\"/appointments\" component={Appointments} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import GlobalStyles from \"./assets/GlobalStyles\";\r\nimport Routes from \"./routes\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\n\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <Routes />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}